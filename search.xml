<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SEP课程代码分享（2023SPRING）</title>
      <link href="/2023/03/07/sep-ke-cheng-dai-ma-fen-xiang-2023spring-lab1/"/>
      <url>/2023/03/07/sep-ke-cheng-dai-ma-fen-xiang-2023spring-lab1/</url>
      
        <content type="html"><![CDATA[<p>写在前面：</p><p>为了小学期不上课（bushi），所有上海交通大学软件工程的同学都要在大一春学期进行一学分的软件基础实践学习，平时的主要内容就是写lab。</p><p>不得不说，写lab耗费了我大量的时间，平均一个lab是3天工作日的空余时间。但是也不得不承认，一次次lab的磨练给予了自己代码能力的提升。此系列用于记录保存自己写的所有lab内容，新lab的代码会在截止之后上传（当然得我有空的情况下），不过……千万不要抄袭哟~（自恋）</p><hr><p>下面是lab1的具体要求：</p><h1 id="Lab1-X老师的小程序"><a href="#Lab1-X老师的小程序" class="headerlink" title="Lab1: X老师的小程序"></a>Lab1: X老师的小程序</h1><p>[toc]</p><p>X老师需要一个统计和计算学生成绩的小程序，以协助他录入学生成绩、计算课程均分以及查看学生的学分绩。<br>学生名单、课程列表和学生的选课情况已经存在于文本文件中，小程序需要从这些文件中读出内容并建立相应的对象，以完成后续的成绩录入和计算工作。</p><p>学生名单存在于文件 <code>Students.txt</code> 中，其中学生分为本科生（Undergraduate）和研究生（Graduate），分别以字母 <code>U</code> 和 <code>G</code> 表示，文件格式如下（<code>#</code> 开头的是注释）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># id;name;year;degree</span><br><span class="line">F180370001;Apple;2019;U</span><br><span class="line">B180370010;Boy;2018;G</span><br></pre></td></tr></table></figure><p>课程列表和学生选课情况存在于文件 <code>Classes.txt</code> 中，文件每一段表示一个课程和选择该课程的学生学号列表，格式如下（<code>#</code> 开头的是注释）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Class name and points followed by student ids</span><br><span class="line">Class:ICS</span><br><span class="line">Points:5</span><br><span class="line">F180370001</span><br><span class="line">F180370002</span><br><span class="line"></span><br><span class="line">Class:English</span><br><span class="line">Points:3</span><br><span class="line">F180370003</span><br><span class="line">B180370001</span><br><span class="line"></span><br><span class="line">Class:ADS</span><br><span class="line">Points:2</span><br><span class="line">B180370001</span><br><span class="line">B180370002</span><br></pre></td></tr></table></figure><p>小程序需要实现的功能主要有以下三个：</p><ol><li>记录成绩：记录某一门课程的一名学生的成绩，为了简便该程序不要求将成绩写入文件，只需存储在内存中即可。</li><li>计算课程平均分：在成绩录入完成以后，选择一门课程并计算出该课程所有选课学生的平均分。</li><li>计算学生学分绩：在成绩录入完成以后，选择一名学生并计算 ta 的学分绩。其中本科生和研究生的学分绩计算方法不同，本科生的总学分绩是 5.0，计算方法是每门课程的分数除以 20 然后按照学分数量加权平均；研究生的总学分绩是 4.0，计算方法是先分档次记分：90～100分 =&gt; 4.0，80～89分 =&gt; 3.5，70～79 =&gt; 3.0，60～69 =&gt; 2.5，60以下 =&gt; 2.0，然后再按照学分数量加权平均。</li></ol><p>小程序通过命令行与用户进行交互，用户通过输入一些特定的命令、课程名、学号和成绩来完成操作流程，流程图如下：</p><p><img src="D:\test\lab1\lab1\spec\sep-lab1-liucheng.png" alt="流程图"></p><p>在系统设计中，类的关系要求如下：</p><p><img src="D:\test\lab1\lab1\spec\sep-lab1-class.png" alt="类图"></p><p>其中 <code>getGrade</code> 函数是 <code>Student</code> 类的<strong>纯虚函数</strong>，它的子类 <code>Undergraduate</code> 和 <code>Graduate</code> 继承后具体实现了 <code>getGrade</code> 函数。（图例可参考：<a href="https://en.wikipedia.org/wiki/Class_diagram）">https://en.wikipedia.org/wiki/Class_diagram）</a></p><h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><ol><li><p>小程序的部分代码已经给出，现在需要你将其补全（即解决所给代码中所有的 <code>TODO</code>）: </p><ol><li>从 <code>Classes.txt</code> 文件中读出课程列表和学生选课情况，将其创建成对应的对象；</li><li>实现 <code>Student</code> 类、<code>Undergraduate</code> 类和 <code>Graduate</code> 类；</li><li>完成计算课程平均分功能、记录成绩功能和计算学生学分绩功能。</li></ol></li><li>所给代码中 <code>StudentWrapper</code> 类的构造函数是有错误的，请改正这个错误<strong>详细</strong>说明原因（创建一个新的 <code>BugReport.txt</code> 文本文件进行说明）。</li><li>处理程序异常输入，例如输入不存在的课程名、学号或者无效的分数时程序不应该崩溃（提示：考虑使用<code>try...catch</code>）。</li></ol><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><p>注意，作业的完成包括两部分：</p><ol><li>完成作业后，在<strong>抽查</strong>名单上的同学需要在上机课时找到助教进行功能演示，表明程序可以运行，且完成了规定的功能；</li><li><strong>所有同学</strong>都需要提交项目代码到 Canvas 平台。</li></ol><p>提交时请将你完成的项目代码（请不要包含生成的中间文件和可执行文件）和说明文件 <code>BugReport.txt</code> 打包（格式为 7z）命名为 <code>lab1-XXX.7z</code> 上传到 Canvas 中，其中 <code>XXX</code> 为你的学号。</p><p>解压后你的项目目录结构大概是下面这样，可以有一些小的区别，比如多一些你自己使用的小文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">lab1</span><br><span class="line">├── Class.cc</span><br><span class="line">├── Class.h</span><br><span class="line">├── Classes.txt</span><br><span class="line">├── Student.cc</span><br><span class="line">├── Student.h</span><br><span class="line">├── Students.txt</span><br><span class="line">├── main.cc</span><br><span class="line">├── BugReport.txt</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">└── spec</span><br><span class="line">    ├── lab1.md</span><br><span class="line">    ├── lab1.pdf</span><br><span class="line">    ├── sep-lab1-class.png</span><br><span class="line">    ├── sep-lab1-liucheng.png</span><br><span class="line">    └── sep-lab1-clion.png</span><br></pre></td></tr></table></figure><blockquote><p>由于 zip 格式有中文乱码问题，rar 的压缩工具为收费软件，请使用 7z 格式进行打包和压缩，关于 7z 压缩的工具：</p><ul><li>Windows 可使用 <a href="https://www.7-zip.org">https://www.7-zip.org</a> 或其他支持7z格式的压缩工具</li><li>MacOS 可使用 Keka （<a href="https://www.keka.io/）">https://www.keka.io/）</a> 等</li><li>Linux 可使用 p7zip （<code>sudo apt install p7zip-full</code>）等</li></ul></blockquote><h2 id="关于-Clion-的一些使用提示"><a href="#关于-Clion-的一些使用提示" class="headerlink" title="关于 Clion 的一些使用提示"></a>关于 Clion 的一些使用提示</h2><ol><li><p>在解压缩之后，你可以直接使用 Clion 打开 <code>lab1</code> 文件夹，建议将 <code>lab1</code> 文件夹放在全英目录下，否则可能会出现本地编译不通过的情况。</p></li><li><p>使用 Clion 打开后会出现如下所示的配置确认，直接点 OK 即可。<strong>注意：请不要修改 CMakeLists.txt 文件中的内容！</strong></p><p><img src="D:\test\lab1\lab1\spec\sep-lab1-clion.png" alt="Clion 配置确认"></p><p>如果没有自己跳出可以自行右击 <code>lab1</code> 文件夹选择 <code>Reload Cmake Project</code> 来生成 <code>cmake-build-debug</code>。 </p></li><li><p>请注意<strong>不要</strong>提交本地的 <code>cmake-build-debug</code> 文件夹。</p></li><li><p>之后，可以通过点击运行和调试按钮来尝试运行项目。注意，第一次运行项目并不会编译通过，因为所给代码中 <code>StudentWrapper</code> 类的构造函数是有错误的，请自己完成修改。</p></li><li><p>请注意程序中文件的路径问题。由于 Clion 会将可执行文件在 <code>cmake-build-debug</code> 文件夹中生成，程序中需要引用的输入文件在上一层目录，因此输入文件名为 <code>../xxx.txt</code> 。如果用其他集成终端可能会直接将可执行文件在 <code>lab1</code> 文件夹中生成，因此输入文件名为 <code>./xxx.txt</code> 。这里统一为 <code>./xxx.txt</code> ，使用 Clion 的同学在提交时需要将 <code>../xxx.txt</code> 改为  <code>./xxx.txt</code>。</p></li></ol><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p>为执行统⼀的测试脚本，现统⼀规定SEP-2023-lab1的输出格式。对于所有计算数据输出均保留两位小数<br>具体格式如下：<strong>（请注意空格和换行）</strong></p><p><strong>成绩计算</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">printAvgScore: &quot;The average score is: %.2f\n&quot;</span><br><span class="line">printGpa: &quot;GPA = %.2f\n&quot;</span><br></pre></td></tr></table></figure><p><strong>异常处理</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">成绩格式错误，命令行输出：&quot;Wrong score!\n&quot;</span><br><span class="line">课程名称错误，命令行输出：&quot;No match class!\n&quot;</span><br><span class="line">学生ID输⼊错误，命令行输出： &quot;No match student!\n&quot;</span><br></pre></td></tr></table></figure><p><strong>测试用例</strong></p><p>lab1文件夹中已经给出了一个测试用例的输入（spec/input0.txt）和输出（spec/output0.txt），在你认为完成后请先自行在本地进行测试，方便定位自己的问题。（注意敲对输入！仔细对比输出！）</p><h3 id="1-关于测试结果的说明"><a href="#1-关于测试结果的说明" class="headerlink" title="1. 关于测试结果的说明"></a>1. 关于测试结果的说明</h3><h4 id="1-1-xxxxxx-line-xx"><a href="#1-1-xxxxxx-line-xx" class="headerlink" title="1.1 xxxxxx(line xx)"></a>1.1 xxxxxx(line xx)</h4><p>给出的错误信息（line xx）意思是在一个测试里输出到第几行的时候出错了，因为一个测试里会要求不止一条输出。比如line 2说明输出的0和1行内容是对的，在第2行错了。</p><p>line xx表示的是助教这里的答案的行数，不是你们程序运行结果的行数。</p><h4 id="1-2-错误处理"><a href="#1-2-错误处理" class="headerlink" title="1.2 错误处理"></a>1.2 错误处理</h4><p>“Wrong score!”不匹配</p><ul><li>Test #%d: Fail. Exception handle(score) error</li></ul><p>“No match class!”不匹配</p><ul><li>Test #%d: Fail. Exception handle(class) error</li></ul><p>“No match student!”不匹配</p><ul><li>Test #%d: Fail. Exception handle(student) error</li></ul><h4 id="1-3-数值计算错误"><a href="#1-3-数值计算错误" class="headerlink" title="1.3 数值计算错误"></a>1.3 数值计算错误</h4><p>含有”The format of”的信息表示输出格式肯定不对，没有该信息的是计算错误或格式错误（保留小数）。</p><h4 id="1-4-其他"><a href="#1-4-其他" class="headerlink" title="1.4 其他"></a>1.4 其他</h4><p>“Answer is too short”表示输出的结果进过匹配后发现答案缺失。</p><p><strong>“Compile error…No such file…”表示作业提交格式没有按照说明提交（含lab1文件夹且不要修改名称）。</strong></p><h3 id="2-测试结果可能的错误原因"><a href="#2-测试结果可能的错误原因" class="headerlink" title="2. 测试结果可能的错误原因"></a>2. 测试结果可能的错误原因</h3><h4 id="2-1-程序本身计算错误"><a href="#2-1-程序本身计算错误" class="headerlink" title="2.1 程序本身计算错误"></a>2.1 程序本身计算错误</h4><h4 id="2-2-多余输出信息"><a href="#2-2-多余输出信息" class="headerlink" title="2.2 多余输出信息"></a>2.2 多余输出信息</h4><p>这里的多余输出信息不是说不能输出辅助信息，而是在给出的《lab1.pdf》文档中规定的输出不是以换行结束的。也就是说这一行输出的末尾要和说明匹配，不能有多余的信息赘述在这行的后面。（这行的前面有多余信息是不影响的）。</p><p>正确示例：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jdlfjs111kdj000fjlsdkf--jljjs....some_info_. ....sjfldsjkfGPA = <span class="number">96</span>.<span class="number">00</span></span><br><span class="line">GPA = <span class="number">96</span>.<span class="number">00</span></span><br></pre></td></tr></table></figure><p>错误示例：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdlfjs111kdj000fjlsdkf--jljjs....some_info_. ....sjfldsjkfGPA = <span class="number">96</span>.<span class="number">00</span>please input ...</span><br></pre></td></tr></table></figure><h4 id="2-3-多余的错误处理"><a href="#2-3-多余的错误处理" class="headerlink" title="2.3 多余的错误处理"></a>2.3 多余的错误处理</h4><p>这里的多余意思是，把正确的输入也通过文档中的三种错误信息格式进行输出。</p><h3 id="3-什么时候测试"><a href="#3-什么时候测试" class="headerlink" title="3. 什么时候测试"></a>3. 什么时候测试</h3><p><strong>并不是你提交了就立刻有结果的！！！</strong></p><p>测试结果只有我这里跑了测试脚本才会上传到课程网站。</p><p>隔30分钟测试一次。</p><h3 id="4-我自己跑的是通过的，为什么助教那里的没有过"><a href="#4-我自己跑的是通过的，为什么助教那里的没有过" class="headerlink" title="4. 我自己跑的是通过的，为什么助教那里的没有过"></a>4. 我自己跑的是通过的，为什么助教那里的没有过</h3><p>有一些同学在问助教测试为什么过不了，测试数据是不会公开的。测试用例有一部分是非常基础的测试，不包含错误处理，大家可以先考虑过正常流程。这里提示一下，正常流程是<strong>【输入课程和学生成绩（不止一个课程，一个课程也不止一个学生），查询课程平均分（不止一个），查询学生GPA（不止一个）】</strong></p><p>助教这里也不会告诉你为什么错了，毕竟一个一个人查助教一个人也没有精力做到，可以确定的是如果程序都正确肯定得分是100，不用怀疑测试脚本的问题。</p><h4 id="额外提示"><a href="#额外提示" class="headerlink" title="额外提示"></a>额外提示</h4><p><strong>测试用例1-4、7最终需要的结果是不含错误处理信息的</strong></p><p><strong>一定一定要注意输出格式！！！每一个字母每一个空格每一个空行都要一样！！！</strong></p><p><strong>测试判断的流程是：如果一行输出含有《lab1.pdf》文件中要求的任意一种输出语句，那么会判定这一行为一行答案，与助教的标准答案的一行进行匹配。所以给同学们的错误提示，不一定就是与之相关的问题。比如说，“GPA is wrong.”这个提示不一定是GPA计算错误，也可能是你的输出含有GPA = xx，而助教的答案这一行是错误处理的“Wrong score!”之类的信息。再比如说，“Exception handle(class) error.”这个提示不一定是课程异常处理出错，非常可能是因为你的输出含有No match class!，而助教的答案这一行不是错误信息，而是gpa或者score等其他信息。</strong></p><h3 id="5-其他问题汇总"><a href="#5-其他问题汇总" class="headerlink" title="5. 其他问题汇总"></a>5. 其他问题汇总</h3><h4 id="5-1-得分范围的切分"><a href="#5-1-得分范围的切分" class="headerlink" title="5.1 得分范围的切分"></a>5.1 得分范围的切分</h4><p>不存在89-90这种范围内的奇怪测试数据，可以不考虑</p><h4 id="5-2-成绩输入错误的下一步，回到输入学生ID这一步"><a href="#5-2-成绩输入错误的下一步，回到输入学生ID这一步" class="headerlink" title="5.2 成绩输入错误的下一步，回到输入学生ID这一步"></a>5.2 成绩输入错误的下一步，回到输入学生ID这一步</h4><h4 id="5-3-查询均分出现非法输入返回输入查询均分这一步；查询绩点出现非法输入返回输入查询绩点这一步（都是同一步不断循环）"><a href="#5-3-查询均分出现非法输入返回输入查询均分这一步；查询绩点出现非法输入返回输入查询绩点这一步（都是同一步不断循环）" class="headerlink" title="5.3 查询均分出现非法输入返回输入查询均分这一步；查询绩点出现非法输入返回输入查询绩点这一步（都是同一步不断循环）"></a>5.3 查询均分出现非法输入返回输入查询均分这一步；查询绩点出现非法输入返回输入查询绩点这一步（都是同一步不断循环）</h4><h4 id="5-4-整个输入成绩过程出现要求输入课程名时，输入非法课程名返回输入课程名这一步"><a href="#5-4-整个输入成绩过程出现要求输入课程名时，输入非法课程名返回输入课程名这一步" class="headerlink" title="5.4 整个输入成绩过程出现要求输入课程名时，输入非法课程名返回输入课程名这一步"></a>5.4 整个输入成绩过程出现要求输入课程名时，输入非法课程名返回输入课程名这一步</h4><h4 id="5-5-我的程序为什么读文件都读不成功？"><a href="#5-5-我的程序为什么读文件都读不成功？" class="headerlink" title="5.5 我的程序为什么读文件都读不成功？"></a>5.5 我的程序为什么读文件都读不成功？</h4><p>请参考《lab1.pdf》的使用提示。</p><h4 id="5-6-使用mac电脑的同学们注意：如果遇到mac电脑运行不过的程序在windows上能过-输入的字符串和存储的字符串总是不相等？"><a href="#5-6-使用mac电脑的同学们注意：如果遇到mac电脑运行不过的程序在windows上能过-输入的字符串和存储的字符串总是不相等？" class="headerlink" title="5.6 使用mac电脑的同学们注意：如果遇到mac电脑运行不过的程序在windows上能过/输入的字符串和存储的字符串总是不相等？"></a>5.6 使用mac电脑的同学们注意：如果遇到mac电脑运行不过的程序在windows上能过/输入的字符串和存储的字符串总是不相等？</h4><p>注意对于输入文件处理的时候，字符串需要把macos系统默认的换行符’\r’做丢弃处理</p><hr><p><strong><em>要求结束，下面奉上自己写的代码（可能不够完美，也欢迎大家提供意见）</em></strong></p><hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Class.cc</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Class.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Student.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Class::addStudent</span><span class="params">(<span class="type">const</span> Student &amp;st)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">StudentWrapper <span class="title">sw</span><span class="params">(st.id, st)</span></span>;</span><br><span class="line">    students.<span class="built_in">push_back</span>(sw);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">StudentWrapper &amp;<span class="title">Class::getStudentWrapper</span><span class="params">(<span class="type">const</span> std::string &amp;studentId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (std::vector&lt;StudentWrapper&gt;::iterator it = students.<span class="built_in">begin</span>();</span><br><span class="line">             it != students.<span class="built_in">end</span>();</span><br><span class="line">             ++it) &#123;</span><br><span class="line">            <span class="keyword">if</span> (it-&gt;id == studentId)</span><br><span class="line">                <span class="keyword">return</span> *it;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="built_in">int</span>(<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//std::cout&lt;&lt;&quot;No match student!&quot;&lt;&lt;std::endl;</span></span><br><span class="line">    <span class="built_in">catch</span>(<span class="type">int</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;No match student!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Class::getAvgScore</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement getAvgScore.</span></span><br><span class="line">    <span class="type">double</span> allScore;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(std::vector&lt;StudentWrapper&gt;::iterator it = students.<span class="built_in">begin</span>();</span><br><span class="line">        it != students.<span class="built_in">end</span>();</span><br><span class="line">        ++it) &#123;</span><br><span class="line">        num++;</span><br><span class="line">        allScore+=it-&gt;<span class="built_in">getScore</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> averageScore=allScore/num;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> averageScore;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Class.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> CLASS_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLASS_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Student.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Class</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    std::vector&lt;StudentWrapper&gt; students;</span><br><span class="line">    <span class="type">const</span> std::string name;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> point;</span><br><span class="line">    <span class="built_in">Class</span>(<span class="type">const</span> std::string &amp;name, <span class="type">const</span> <span class="type">int</span> point)</span><br><span class="line">        : <span class="built_in">name</span>(name), <span class="built_in">point</span>(point) &#123; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">addStudent</span><span class="params">(<span class="type">const</span> Student &amp;st)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function">StudentWrapper &amp;<span class="title">getStudentWrapper</span><span class="params">(<span class="type">const</span> std::string &amp;studentId)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">getAvgScore</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// CLASS_H_</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">//Class.txt</span><br><span class="line"># Class: 课程名</span><br><span class="line"># Points: 学分</span><br><span class="line">Class:ICS</span><br><span class="line">Points:5</span><br><span class="line">F180370001</span><br><span class="line">F180370002</span><br><span class="line">F180370003</span><br><span class="line">F180370004</span><br><span class="line">F180370005</span><br><span class="line"></span><br><span class="line">Class:English</span><br><span class="line">Points:3</span><br><span class="line">F180370001</span><br><span class="line">F180370002</span><br><span class="line">F180370003</span><br><span class="line">F180370004</span><br><span class="line">F180370005</span><br><span class="line">B180370001</span><br><span class="line">B180370002</span><br><span class="line">B180370003</span><br><span class="line"></span><br><span class="line">Class:ADS</span><br><span class="line">Points:2</span><br><span class="line">B180370001</span><br><span class="line">B180370002</span><br><span class="line">B180370003</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.cc</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Class.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Student.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iomanip&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AppX</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;Student *&gt; studentVec;</span><br><span class="line">    vector&lt;Class *&gt; classVec;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">loadFiles</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">inputScore</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">printAvgScore</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">printGpa</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">AppX</span>();</span><br><span class="line">    ~<span class="built_in">AppX</span>();</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">AppX::~<span class="built_in">AppX</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// You can use the traditional loop, which is more clear.</span></span><br><span class="line">    <span class="keyword">for</span> (vector&lt;Class *&gt;::iterator it = classVec.<span class="built_in">begin</span>();</span><br><span class="line">         it != classVec.<span class="built_in">end</span>();</span><br><span class="line">         ++it) &#123;</span><br><span class="line">        <span class="keyword">if</span> (*it) <span class="built_in">delete</span> (*it);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// You can use modern and simpler loops only if you know what it is doing.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span> &amp;s: studentVec) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s) <span class="built_in">delete</span> (s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">AppX::<span class="built_in">AppX</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">loadFiles</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AppX::loadFiles</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string line;</span><br><span class="line">    <span class="type">size_t</span> pos1, pos2;</span><br><span class="line">    vector&lt;string&gt; bufv;</span><br><span class="line">    Student *st = <span class="literal">nullptr</span>;</span><br><span class="line">    string clsname;</span><br><span class="line">    <span class="type">int</span> point;</span><br><span class="line">    Class *cl = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Open a file as a input stream.</span></span><br><span class="line">    <span class="function">ifstream <span class="title">stfile</span><span class="params">(<span class="string">&quot;../Students.txt&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">getline</span>(stfile, line)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (line.<span class="built_in">empty</span>()) <span class="comment">// It&#x27;s an empty line.</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (line[<span class="number">0</span>] == <span class="string">&#x27;#&#x27;</span>) <span class="comment">// It&#x27;s a comment line.</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// The bufv vector stores each columnes in the line.</span></span><br><span class="line">        bufv.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="comment">// Split the line into columes.</span></span><br><span class="line">        <span class="comment">//   pos1: begining the the column.</span></span><br><span class="line">        <span class="comment">//   pos2: end of the column.</span></span><br><span class="line">        pos1 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            pos2 = line.<span class="built_in">find</span>(<span class="string">&#x27;;&#x27;</span>, pos1 + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (pos2 == string::npos) &#123; <span class="comment">// No more columns.</span></span><br><span class="line">                <span class="comment">// Save the last column (pos1 ~ eol).</span></span><br><span class="line">                bufv.<span class="built_in">push_back</span>(line.<span class="built_in">substr</span>(pos1, string::npos));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Save the column (pos1 ~ pos2).</span></span><br><span class="line">                bufv.<span class="built_in">push_back</span>(line.<span class="built_in">substr</span>(pos1, pos2 - pos1));</span><br><span class="line">            &#125;</span><br><span class="line">            pos1 = pos2 + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> uncomment next lines after implementing class Undergraduate</span></span><br><span class="line">        <span class="comment">// and Graduate.</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (bufv[<span class="number">3</span>] == <span class="string">&quot;U&quot;</span>)</span><br><span class="line">            st = <span class="keyword">new</span> <span class="built_in">Undergraduate</span>(bufv[<span class="number">0</span>], bufv[<span class="number">1</span>], bufv[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            st = <span class="keyword">new</span> <span class="built_in">Graduate</span>(bufv[<span class="number">0</span>], bufv[<span class="number">1</span>], bufv[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        studentVec.<span class="built_in">push_back</span>(st);</span><br><span class="line">    &#125;</span><br><span class="line">    stfile.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> load data from ./Classes.txt and push objects to the vector.</span></span><br><span class="line">    <span class="function">ifstream <span class="title">afile</span><span class="params">(<span class="string">&quot;../Classes.txt&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">getline</span>(afile,line))&#123;</span><br><span class="line">        <span class="keyword">if</span>(line.<span class="built_in">empty</span>())</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(line[<span class="number">0</span>]==<span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="comment">//bufv.clear();</span></span><br><span class="line">        <span class="keyword">if</span>(line[<span class="number">0</span>]==<span class="string">&#x27;C&#x27;</span>&amp;&amp;line[<span class="number">1</span>]==<span class="string">&#x27;l&#x27;</span>&amp;&amp;line[<span class="number">2</span>]==<span class="string">&#x27;a&#x27;</span>&amp;&amp;line[<span class="number">3</span>]==<span class="string">&#x27;s&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            clsname=line.<span class="built_in">substr</span>(<span class="number">6</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(line.<span class="built_in">substr</span>(<span class="number">0</span>,<span class="number">6</span>)==<span class="string">&quot;Points&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            point=line[<span class="number">7</span>]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            cl=<span class="keyword">new</span> <span class="built_in">Class</span>(clsname,point);</span><br><span class="line">            <span class="comment">//此处还应该录入学生选课情况。</span></span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">getline</span>(afile,line))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(line.<span class="built_in">empty</span>())</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    string tmp=line.<span class="built_in">substr</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(std::vector&lt;Student *&gt;::iterator it=studentVec.<span class="built_in">begin</span>();it!=studentVec.<span class="built_in">end</span>();it++)</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="comment">//                        cout&lt;&lt;(*it)-&gt;id&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span>(tmp==(*it)-&gt;id)&#123;</span><br><span class="line">                            <span class="type">const</span> Student* tmpOfStudent=*it;</span><br><span class="line">                            cl-&gt;<span class="built_in">addStudent</span>(*tmpOfStudent);</span><br><span class="line">                            (*it)-&gt;<span class="built_in">addClass</span>(cl);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            classVec.<span class="built_in">push_back</span>(cl);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    afile.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*ifstream bfile(&quot;../Classes.txt&quot;);</span></span><br><span class="line"><span class="comment">    while(getline(bfile,line))&#123;</span></span><br><span class="line"><span class="comment">        Class* tmpClass;</span></span><br><span class="line"><span class="comment">        if(line.empty())</span></span><br><span class="line"><span class="comment">            continue;</span></span><br><span class="line"><span class="comment">        if(line[0]==&#x27;#&#x27;)</span></span><br><span class="line"><span class="comment">            continue;</span></span><br><span class="line"><span class="comment">        if(line[0]==&#x27;C&#x27;&amp;&amp;line[1]==&#x27;l&#x27;&amp;&amp;line[2]==&#x27;a&#x27;&amp;&amp;line[3]==&#x27;s&#x27;)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            clsname=line.substr(6);</span></span><br><span class="line"><span class="comment">            for(std::vector&lt;Class*&gt;::iterator it=classVec.begin();it!=classVec.end();it++)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                if(clsname==(*it)-&gt;name)</span></span><br><span class="line"><span class="comment">                    tmpClass=*it;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            while (getline(bfile,line))</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                if(line.empty())</span></span><br><span class="line"><span class="comment">                    break;</span></span><br><span class="line"><span class="comment">                if(line[0]==&#x27;P&#x27;&amp;&amp;line[1]==&#x27;o&#x27;)</span></span><br><span class="line"><span class="comment">                    break;</span></span><br><span class="line"><span class="comment">                else</span></span><br><span class="line"><span class="comment">                &#123;</span></span><br><span class="line"><span class="comment">                    string tmpName=line.substr(0);</span></span><br><span class="line"><span class="comment">                    for(std::vector&lt;Student *&gt;::iterator it=studentVec.begin();it!=studentVec.end();++it)</span></span><br><span class="line"><span class="comment">                    &#123;</span></span><br><span class="line"><span class="comment">                        if(tmpName==(*it)-&gt;name)</span></span><br><span class="line"><span class="comment">                            (*it)-&gt;addClass(tmpClass);</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    bfile.close();*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Hint: how is student information read?</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AppX::inputScore</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement inputScore.</span></span><br><span class="line">    <span class="comment">// Hint: Take a look at printAvgScore().</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">        string sbuf;</span><br><span class="line">        Class *cl;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Please input the class name (or input q to quit): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; sbuf;</span><br><span class="line">        <span class="keyword">if</span> (sbuf == <span class="string">&quot;q&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        cl = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">for</span> (vector&lt;Class *&gt;::iterator it = classVec.<span class="built_in">begin</span>();</span><br><span class="line">             it != classVec.<span class="built_in">end</span>();</span><br><span class="line">             ++it) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((*it)-&gt;name == sbuf) &#123;</span><br><span class="line">                cl = *it;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cl == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No match class!&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            string inputString;</span><br><span class="line">            <span class="comment">//StudentWrapper* temp;</span></span><br><span class="line">            <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Please input the student number (or input q to quit): &quot;</span>;</span><br><span class="line">            cin &gt;&gt; inputString;</span><br><span class="line">            <span class="keyword">if</span> (inputString == <span class="string">&quot;q&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (vector&lt;StudentWrapper&gt;::iterator it = cl-&gt;students.<span class="built_in">begin</span>(); it != cl-&gt;students.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (it-&gt;id == inputString) &#123;</span><br><span class="line">                    cout&lt;&lt;it-&gt;<span class="built_in">toString</span>();</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;please input the score: &quot;</span>;</span><br><span class="line">                    <span class="type">double</span> inputScore;</span><br><span class="line">                    string stringA;</span><br><span class="line">                    cin&gt;&gt;stringA;</span><br><span class="line">                    <span class="keyword">if</span>(stringA==<span class="string">&quot;q&quot;</span>)</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="type">bool</span> flag1=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">if</span>(stringA[<span class="number">1</span>]==<span class="string">&#x27;\0&#x27;</span>||stringA[<span class="number">2</span>]==<span class="string">&#x27;\0&#x27;</span>||stringA[<span class="number">3</span>]==<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">                        flag1=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">if</span>(flag1== <span class="literal">true</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout&lt;&lt;<span class="string">&quot;Wrong score!&quot;</span>&lt;&lt;endl;</span><br><span class="line">                        flag=<span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(stringA[<span class="number">1</span>]==<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(stringA[<span class="number">0</span>]-<span class="string">&#x27;0&#x27;</span>&gt;=<span class="number">0</span>&amp;&amp;stringA[<span class="number">0</span>]-<span class="string">&#x27;0&#x27;</span>&lt;=<span class="number">9</span>)</span><br><span class="line">                            inputScore=stringA[<span class="number">0</span>]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            cout&lt;&lt;<span class="string">&quot;Wrong score!&quot;</span>&lt;&lt;endl;</span><br><span class="line">                            flag=<span class="literal">false</span>;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(stringA[<span class="number">2</span>]==<span class="string">&#x27;\0&#x27;</span>&amp;&amp;stringA[<span class="number">1</span>]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>((stringA[<span class="number">0</span>]-<span class="string">&#x27;0&#x27;</span>&gt;=<span class="number">0</span>&amp;&amp;stringA[<span class="number">0</span>]-<span class="string">&#x27;0&#x27;</span>&lt;=<span class="number">9</span>)&amp;&amp;(stringA[<span class="number">1</span>]-<span class="string">&#x27;0&#x27;</span>&gt;=<span class="number">0</span>&amp;&amp;stringA[<span class="number">1</span>]-<span class="string">&#x27;0&#x27;</span>&lt;=<span class="number">9</span>))</span><br><span class="line">                        &#123;</span><br><span class="line">                            inputScore=(stringA[<span class="number">0</span>]-<span class="string">&#x27;0&#x27;</span>)*<span class="number">10</span>+stringA[<span class="number">1</span>]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            cout&lt;&lt;<span class="string">&quot;Wrong score!&quot;</span>&lt;&lt;endl;</span><br><span class="line">                            flag=<span class="literal">false</span>;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(stringA[<span class="number">3</span>]==<span class="string">&#x27;\0&#x27;</span>&amp;&amp;stringA[<span class="number">2</span>]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(stringA==<span class="string">&quot;100&quot;</span>)</span><br><span class="line">                            inputScore=<span class="number">100</span>;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            cout&lt;&lt;<span class="string">&quot;Wrong score!&quot;</span>&lt;&lt;endl;</span><br><span class="line">                            flag=<span class="literal">false</span>;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(inputScore&lt;<span class="number">0</span>||inputScore&gt;<span class="number">100</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout&lt;&lt;<span class="string">&quot;Wrong score!&quot;</span>&lt;&lt;endl;</span><br><span class="line">                        flag=<span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    it-&gt;<span class="built_in">setScore</span>(inputScore);</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="literal">true</span>) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;No match student!&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AppX::printAvgScore</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string sbuf;</span><br><span class="line">    Class *cl;</span><br><span class="line">    <span class="type">double</span> avg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Please input the class name (or input q to quit): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; sbuf;</span><br><span class="line">        <span class="keyword">if</span> (sbuf == <span class="string">&quot;q&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        cl = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">for</span> (vector&lt;Class *&gt;::iterator it = classVec.<span class="built_in">begin</span>();</span><br><span class="line">             it != classVec.<span class="built_in">end</span>();</span><br><span class="line">             ++it) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((*it)-&gt;name == sbuf) &#123;</span><br><span class="line">                cl = *it;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cl == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No match class!&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        avg = cl-&gt;<span class="built_in">getAvgScore</span>();</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;The average score is: &quot;</span> ;</span><br><span class="line">        cout&lt;&lt;<span class="built_in">setiosflags</span>(ios::fixed)&lt;&lt;<span class="built_in">setprecision</span>(<span class="number">2</span>)&lt;&lt; avg &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AppX::printGpa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement printGpa.</span></span><br><span class="line">    <span class="comment">// Hint: Take a look at printAvgScore().</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        string inputString;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Please input the student number (or input q to quit): &quot;</span>;</span><br><span class="line">        cin&gt;&gt;inputString;</span><br><span class="line">        <span class="keyword">if</span>(inputString==<span class="string">&quot;q&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        Student* cl;</span><br><span class="line">        cl= <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">for</span>(vector&lt;Student *&gt;::iterator it =studentVec.<span class="built_in">begin</span>();it!=studentVec.<span class="built_in">end</span>();++it)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((*it)-&gt;id==inputString)</span><br><span class="line">            &#123;</span><br><span class="line">                cl=*it;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cl== <span class="literal">nullptr</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No match student!&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> Grade=cl-&gt;<span class="built_in">getGrade</span>();</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;GPA = &quot;</span>;</span><br><span class="line">        cout&lt;&lt;<span class="built_in">setiosflags</span>(ios::fixed)&lt;&lt;<span class="built_in">setprecision</span>(<span class="number">2</span>)&lt;&lt;Grade&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">AppX::run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> cmd;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Command menu:\n&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;\ti: Input score\n&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;\ta: Compute average score of a class\n&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;\tg: Compute grade of a student\n&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;\tq: Quit\n&quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot;Please input the command: &quot;</span>;</span><br><span class="line">        cin &gt;&gt; cmd;</span><br><span class="line">        <span class="keyword">if</span> (cmd == <span class="string">&#x27;i&#x27;</span>) &#123;</span><br><span class="line">            <span class="built_in">inputScore</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cmd == <span class="string">&#x27;a&#x27;</span>) &#123;</span><br><span class="line">            <span class="built_in">printAvgScore</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cmd == <span class="string">&#x27;g&#x27;</span>) &#123;</span><br><span class="line">            <span class="built_in">printGpa</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cmd == <span class="string">&#x27;q&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Invalid command!\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AppX app;</span><br><span class="line">    <span class="keyword">return</span> app.<span class="built_in">run</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Student.cc</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Student.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Class.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">Student::toString</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> uncomment the following code after implementing class Student.</span></span><br><span class="line"></span><br><span class="line">    std::ostringstream oss;</span><br><span class="line">    oss &lt;&lt; <span class="string">&quot;Student Information:&quot;</span></span><br><span class="line">        &lt;&lt; <span class="string">&quot;\n\tid: &quot;</span> &lt;&lt; id</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\n\tname: &quot;</span> &lt;&lt; name</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\n\tenrollment year: &quot;</span> &lt;&lt; year</span><br><span class="line">        &lt;&lt; <span class="string">&quot;\n\tdegree: &quot;</span> &lt;&lt; (degree == graduate ? <span class="string">&quot;graduate&quot;</span> : <span class="string">&quot;undergraduate&quot;</span>)</span><br><span class="line">        &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> oss.<span class="built_in">str</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> implement functions which are declared in Student.h.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::addClass</span><span class="params">(Class *c)</span> </span>&#123;</span><br><span class="line">    <span class="type">bool</span> flag;</span><br><span class="line">    Class *target;</span><br><span class="line">    <span class="comment">/* for(std::vector&lt;Class*&gt;::iterator it=classes.begin();it!=classes.end();++it)</span></span><br><span class="line"><span class="comment">     &#123;</span></span><br><span class="line"><span class="comment">         flag=true;</span></span><br><span class="line"><span class="comment">         if((*it)-&gt;name==(*c).name)</span></span><br><span class="line"><span class="comment">         &#123;</span></span><br><span class="line"><span class="comment">             flag=false;</span></span><br><span class="line"><span class="comment">             target=*it;</span></span><br><span class="line"><span class="comment">         &#125;</span></span><br><span class="line"><span class="comment">         if(flag==true)</span></span><br><span class="line"><span class="comment">             throw &quot;No matching class!&quot;;*/</span></span><br><span class="line">    classes.<span class="built_in">push_back</span>(c);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* &#125;*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Undergraduate::getGrade</span><span class="params">()</span>  </span>&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> allScore=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> allPoint=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(std::vector&lt;Class *&gt;::iterator it=classes.<span class="built_in">begin</span>();it!=classes.<span class="built_in">end</span>();++it)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">double</span> score=(*it)-&gt;<span class="built_in">getStudentWrapper</span>(id).<span class="built_in">getScore</span>()/<span class="number">20</span>;</span><br><span class="line">            allPoint+=(*it)-&gt;point;</span><br><span class="line">            allScore+=(*it)-&gt;point*score;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> Grade=allScore/allPoint;</span><br><span class="line">        <span class="keyword">return</span> Grade;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Graduate::getGrade</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> allPoint=<span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> allScore=<span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> score;</span><br><span class="line">    <span class="keyword">for</span>(std::vector&lt;Class *&gt;::iterator it=classes.<span class="built_in">begin</span>();it!=classes.<span class="built_in">end</span>();++it)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((*it)-&gt;<span class="built_in">getStudentWrapper</span>(id).<span class="built_in">getScore</span>()&lt;=<span class="number">100</span>&amp;&amp;(*it)-&gt;<span class="built_in">getStudentWrapper</span>(id).<span class="built_in">getScore</span>()&gt;=<span class="number">90</span>)</span><br><span class="line">            score=<span class="number">4.0</span>;</span><br><span class="line">        <span class="keyword">if</span>((*it)-&gt;<span class="built_in">getStudentWrapper</span>(id).<span class="built_in">getScore</span>()&lt;=<span class="number">89</span>&amp;&amp;(*it)-&gt;<span class="built_in">getStudentWrapper</span>(id).<span class="built_in">getScore</span>()&gt;=<span class="number">80</span>)</span><br><span class="line">            score=<span class="number">3.5</span>;</span><br><span class="line">        <span class="keyword">if</span>((*it)-&gt;<span class="built_in">getStudentWrapper</span>(id).<span class="built_in">getScore</span>()&lt;=<span class="number">79</span>&amp;&amp;(*it)-&gt;<span class="built_in">getStudentWrapper</span>(id).<span class="built_in">getScore</span>()&gt;=<span class="number">70</span>)</span><br><span class="line">            score=<span class="number">3.0</span>;</span><br><span class="line">        <span class="keyword">if</span>((*it)-&gt;<span class="built_in">getStudentWrapper</span>(id).<span class="built_in">getScore</span>()&lt;=<span class="number">60</span>&amp;&amp;(*it)-&gt;<span class="built_in">getStudentWrapper</span>(id).<span class="built_in">getScore</span>()&gt;=<span class="number">60</span>)</span><br><span class="line">            score=<span class="number">2.5</span>;</span><br><span class="line">        <span class="keyword">if</span>((*it)-&gt;<span class="built_in">getStudentWrapper</span>(id).<span class="built_in">getScore</span>()&lt;=<span class="number">60</span>)</span><br><span class="line">            score=<span class="number">2.0</span>;</span><br><span class="line">        allPoint+=(*it)-&gt;point;</span><br><span class="line">        allScore+=(*it)-&gt;point*score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> Grade=allScore/allPoint;</span><br><span class="line">    <span class="keyword">return</span> Grade;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Student.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> STUDENT_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STUDENT_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Class</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Degree</span> &#123;</span><br><span class="line">    undergraduate,</span><br><span class="line">    graduate</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement class Student.</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">const</span> std::string id;</span><br><span class="line">    <span class="type">const</span> std::string name;</span><br><span class="line">    <span class="type">const</span> std::string year;</span><br><span class="line">    Degree degree;</span><br><span class="line">    std::vector&lt;Class*&gt; classes;</span><br><span class="line">    <span class="function">std::string <span class="title">toString</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">double</span> <span class="title">getGrade</span><span class="params">()</span></span>=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addClass</span><span class="params">(Class* c)</span></span>;</span><br><span class="line">    <span class="built_in">Student</span>(std::string a,std::string b,std::string c):<span class="built_in">id</span>(a),<span class="built_in">name</span>(b),<span class="built_in">year</span>(c)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> implement class Graduate.</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Graduate</span>:<span class="keyword">public</span> Student&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">   <span class="comment">/* Degree degree=graduate;*/</span></span><br><span class="line">    <span class="built_in">Graduate</span>(std::string a,std::string b,std::string c): <span class="built_in">Student</span>(a,b,c)</span><br><span class="line">    &#123;</span><br><span class="line">        degree=graduate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">double</span> <span class="title">getGrade</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> implement class Undergraduate.</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Undergraduate</span>:<span class="keyword">public</span> Student&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/*Degree degree=undergraduate;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">Undergraduate</span>(std::string a,std::string b,std::string c): <span class="built_in">Student</span>(a,b,c)</span><br><span class="line">    &#123;</span><br><span class="line">        degree=undergraduate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">double</span> <span class="title">getGrade</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StudentWrapper</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> score = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">const</span> Student &amp;student;</span><br><span class="line">    <span class="type">const</span> std::string id;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> fix error</span></span><br><span class="line">    <span class="comment">//solved</span></span><br><span class="line">    <span class="built_in">StudentWrapper</span>(<span class="type">const</span> std::string &amp;id, <span class="type">const</span> Student &amp;student) :<span class="built_in">student</span>(student),<span class="built_in">id</span>(id)</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setScore</span><span class="params">(<span class="type">double</span> score)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       <span class="keyword">try</span>&#123;</span><br><span class="line">           <span class="keyword">if</span> (score &lt; <span class="number">0</span> || score &gt; <span class="number">100</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="built_in">double</span>(<span class="number">8</span>);</span><br><span class="line">               <span class="comment">//std::cout&lt;&lt;&quot;Wrong score!&quot;&lt;&lt;std::endl;</span></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">this</span>-&gt;score = score;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">catch</span> (<span class="type">double</span>)</span><br><span class="line">       &#123;cout&lt;&lt;<span class="string">&quot;Wrong score!&quot;</span>&lt;&lt;endl;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">getScore</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>-&gt;score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">std::string <span class="title">toString</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> student.<span class="built_in">toString</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// STUDENT_H_</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//Student.txt</span><br><span class="line"># id;name;year;degree</span><br><span class="line">F180370001;Apple;2019;U</span><br><span class="line">F180370002;Boy;2019;U</span><br><span class="line">F180370003;Cat;2019;U</span><br><span class="line">F180370004;Dog;2019;U</span><br><span class="line">F180370005;Egg;2019;U</span><br><span class="line">B180370001;Fish;2018;G</span><br><span class="line">B180370002;Girl;2018;G</span><br><span class="line">B180370003;Hand;2018;G</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//BugReport.txt</span><br><span class="line">StudentWrapper类构造函数问题原因：</span><br><span class="line"></span><br><span class="line">在StudentWrapper类中，student和id均被设置为const，所以在其构造函数中，不能直接对其进行赋值，而应该使用初始化列表对其进行初始化。</span><br></pre></td></tr></table></figure><hr><p>上面是代码，下面是可供测试的样例</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">//input0.txt</span><br><span class="line">i</span><br><span class="line">ICS</span><br><span class="line">F180370001</span><br><span class="line">90</span><br><span class="line">F180370002</span><br><span class="line">60</span><br><span class="line">F180370003</span><br><span class="line">70</span><br><span class="line">F180370004</span><br><span class="line">45</span><br><span class="line">F180370005</span><br><span class="line">0</span><br><span class="line">q</span><br><span class="line">English</span><br><span class="line">F180370001</span><br><span class="line">71</span><br><span class="line">F180370002</span><br><span class="line">72</span><br><span class="line">F180370003</span><br><span class="line">70</span><br><span class="line">B180370001</span><br><span class="line">76</span><br><span class="line">B180370002</span><br><span class="line">-200</span><br><span class="line">B180370003</span><br><span class="line">78</span><br><span class="line">q</span><br><span class="line">ADS</span><br><span class="line">B180370001</span><br><span class="line">80</span><br><span class="line">B180370002</span><br><span class="line">-200</span><br><span class="line">B180370003</span><br><span class="line">90</span><br><span class="line">q</span><br><span class="line">q</span><br><span class="line">a</span><br><span class="line">ICS</span><br><span class="line">ADS</span><br><span class="line">English</span><br><span class="line">q</span><br><span class="line">g</span><br><span class="line">B180370001</span><br><span class="line">B180370002</span><br><span class="line">B180370003</span><br><span class="line">B190370004</span><br><span class="line">F180370001</span><br><span class="line">F180370002</span><br><span class="line">F180370003</span><br><span class="line">F180370004</span><br><span class="line">F180370005</span><br><span class="line">q</span><br><span class="line">q</span><br><span class="line">q</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//output0.txt</span><br><span class="line">Please input the student id (or input q to quit): please input the score: Wrong score!</span><br><span class="line">Please input the student id (or input q to quit): please input the score: Wrong score!</span><br><span class="line">Please input the command: Please input the class name (or input q to quit): The average score is: 53.00</span><br><span class="line">Please input the class name (or input q to quit): The average score is: 56.67</span><br><span class="line">Please input the class name (or input q to quit): The average score is: 45.88</span><br><span class="line">GPA = 3.20</span><br><span class="line">GPA = 2.00</span><br><span class="line">GPA = 3.40</span><br><span class="line">Please input the student id (or input q to quit): No match student!</span><br><span class="line">GPA = 4.14</span><br><span class="line">GPA = 3.23</span><br><span class="line">GPA = 3.50</span><br><span class="line">GPA = 1.41</span><br><span class="line">GPA = 0.00</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>上面就是lab1的所有内容，祝您阅读愉快，代码能力++！</p><p>有任何建议，欢迎+vx：w2386181363进行沟通！！！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>周末，我们聊点人生</title>
      <link href="/2023/03/04/zhou-mo-wo-men-liao-dian-ren-sheng/"/>
      <url>/2023/03/04/zhou-mo-wo-men-liao-dian-ren-sheng/</url>
      
        <content type="html"><![CDATA[<p>周末，稍微空闲一点，那就在此时谈点人生。</p><p>这段话的灵感来源来自于学长up主“吴Simon”。会发表在我的个人博客上（估计没有多少人看到）。Anyway，就当是自己给生命的留痕吧。</p><p>长大后，我们发现，我们好像最缺少的一个品质就是勇气：站在crush面前，没有勇气去表白；在邪恶势力面前，没有勇气为正义发声；在人生的重大选择面前，没有勇气去挑战那个不可能的一面……</p><p>回想小时候的我们，是如此的有勇气：小时候被问最大的梦想是什么，是成为科学家，是像奥特曼一样征服怪兽，可是，如今，当自己最接近科学家，每天都有机会和他们接触时，却没勇气去试一试……</p><p>若问现在的自己有什么梦想，我却只能回答道：想要在上海扎根，或是在米国扎根，找个和自己差不多的女朋友，能买套还不错的房子，平平淡淡却幸福的平稳度过这一辈子。</p><p>到底是岁月将我们磨平了棱角，还是我们过成了世俗的姿态。</p><p>小时候，一切都是未知的，高中时，未来是憧憬的，但是进入大学，一切好像都是只有一条基本上固定的路，走向支路似乎就是一些没有勇气执行的挑战。</p><p>又能如何呢，走一步看一步吧，可能在若干年后，我也会羡慕此时的自己，好歹还有试错的机会。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大一下记录(weekly)</title>
      <link href="/2023/02/25/da-yi-xia-ji-lu-weekly/"/>
      <url>/2023/02/25/da-yi-xia-ji-lu-weekly/</url>
      
        <content type="html"><![CDATA[<h1 id="大一春学期记录（weekly）"><a href="#大一春学期记录（weekly）" class="headerlink" title="大一春学期记录（weekly）"></a>大一春学期记录（weekly）</h1><h4 id="早就听说大一秋学期的课只是小菜一碟，顶多跟高三一比，但是大一春学期是极为难熬的地狱模式（现在懂这段话了……）。痛苦的岁月会换来能力的提升，所以不妨将这段痛苦时光用weekly-report的形式记录下来，留个念想。"><a href="#早就听说大一秋学期的课只是小菜一碟，顶多跟高三一比，但是大一春学期是极为难熬的地狱模式（现在懂这段话了……）。痛苦的岁月会换来能力的提升，所以不妨将这段痛苦时光用weekly-report的形式记录下来，留个念想。" class="headerlink" title="早就听说大一秋学期的课只是小菜一碟，顶多跟高三一比，但是大一春学期是极为难熬的地狱模式（现在懂这段话了……）。痛苦的岁月会换来能力的提升，所以不妨将这段痛苦时光用weekly report的形式记录下来，留个念想。"></a>早就听说大一秋学期的课只是小菜一碟，顶多跟高三一比，但是大一春学期是极为难熬的地狱模式（现在懂这段话了……）。痛苦的岁月会换来能力的提升，所以不妨将这段痛苦时光用weekly report的形式记录下来，留个念想。</h4><h2 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h2><p>新课表过的还不错（轻松），所有的任务都认真完成也没觉得有多累。周五没事做出去跟大太阳喝点东西，喝的晚上上吐下泻……</p><p>周六复旦好友cly来交大玩，带她逛了校园，喝了timo，吃了烤盘饭。</p><p>就在此时，我收到了要调整课表的消息，数据结构要调整到软件工程特定的姜丽红老师班级，同时还加上了一个学分的SEP。</p><p>紧跟着改变，我的物理也从我最爱的袁晓忠老师改到了陈洁老师。</p><p>心中有点不爽，但是，也算是个不错的开局吧！</p><p>期待去复旦玩。</p><h2 id="第二周"><a href="#第二周" class="headerlink" title="第二周"></a>第二周</h2><p>第二周开始疯狂模式了……</p><p>物理感觉讲的更浅了，个人感觉自己更加适合袁晓忠，但是毫无办法。</p><p>课表调整之后变得更两极分化：周一二五课比较多，但是双周的周三四则完全空出来了。</p><p>第二周的空闲当然并没有去玩，而是在包图写SEP的lab1，lab1虽然简单（跟后面的相比），但是真的好难呜呜呜……</p><p>vector之类的很多都没有讲，需要自己一点点去学。</p><p>自己花了周三四五的下午，终于完成了所有，但是：大的来了！</p><p>先是发现测试失败，只有40/100，反复修改之后变成了0</p><p>所有的test都是</p><p><img src="C:\Users\23861\AppData\Roaming\Typora\typora-user-images\image-20230225153001758.png" alt="image-20230225153001758"></p><p>…………………………</p><p>真的崩了，周五下午六点完成的，在电脑上运行的很好，但是找runtime exception找了六个小时，一直到晚上十二点。</p><p>发了条朋友圈：</p><p><img src="C:\Users\23861\AppData\Roaming\Typora\typora-user-images\image-20230225153125415.png" alt="image-20230225153125415"></p><p>感觉天要塌下来了。</p><p>第二天一早，收到了这条信息，让人愉悦！</p><p><img src="C:\Users\23861\AppData\Roaming\Typora\typora-user-images\image-20230225153226081.png" alt="image-20230225153226081"></p><p>666666666666666666666666666666666666！</p><p>周六去了农场参加劳动教育（玩），下午来华师辣，真的好多女生qaq</p><p>相信吧，未来更美好！</p><h2 id="第三周"><a href="#第三周" class="headerlink" title="第三周"></a>第三周</h2><p>相比第二周的大起大落，第三周过的很愉快。每天就上课写作业，没什么大的压力，周末准备去看一场源动力，再请晏子坤到交大来玩~</p><p>下一周要开始写lab2了，希望是开开心心得一周捏~！</p><p>（原本计划周末去南京，但因为住酒店的钱太过于昂贵，遂放弃。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>线性代数整理（部分）（前三章）</title>
      <link href="/2023/02/06/xian-xing-dai-shu-zheng-li/"/>
      <url>/2023/02/06/xian-xing-dai-shu-zheng-li/</url>
      
        <content type="html"><![CDATA[<h1 id="线性代数整理"><a href="#线性代数整理" class="headerlink" title="线性代数整理"></a>线性代数整理</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h2 id="第一章-矩阵与行列式"><a href="#第一章-矩阵与行列式" class="headerlink" title="第一章 矩阵与行列式"></a>第一章 矩阵与行列式</h2><h3 id="一、多项式"><a href="#一、多项式" class="headerlink" title="一、多项式"></a>一、多项式</h3><h3 id="二、矩阵的概念与运算"><a href="#二、矩阵的概念与运算" class="headerlink" title="二、矩阵的概念与运算"></a>二、矩阵的概念与运算</h3><h3 id="三、行列式"><a href="#三、行列式" class="headerlink" title="三、行列式"></a>三、行列式</h3><h3 id="四、可逆矩阵"><a href="#四、可逆矩阵" class="headerlink" title="四、可逆矩阵"></a>四、可逆矩阵</h3><h3 id="五、克莱姆法则"><a href="#五、克莱姆法则" class="headerlink" title="五、克莱姆法则"></a>五、克莱姆法则</h3><h3 id="六、矩阵的分块"><a href="#六、矩阵的分块" class="headerlink" title="六、矩阵的分块"></a>六、矩阵的分块</h3><h3 id="七、行列式的计算"><a href="#七、行列式的计算" class="headerlink" title="七、行列式的计算"></a>七、行列式的计算</h3><h3 id="八、几个特殊的矩阵"><a href="#八、几个特殊的矩阵" class="headerlink" title="八、几个特殊的矩阵"></a>八、几个特殊的矩阵</h3><h2 id="第二章-线性方程组理论"><a href="#第二章-线性方程组理论" class="headerlink" title="第二章 线性方程组理论"></a>第二章 线性方程组理论</h2><h3 id="一、矩阵的相抵标准形"><a href="#一、矩阵的相抵标准形" class="headerlink" title="一、矩阵的相抵标准形"></a>一、矩阵的相抵标准形</h3><h3 id="二、分块矩阵的初等变换"><a href="#二、分块矩阵的初等变换" class="headerlink" title="二、分块矩阵的初等变换"></a>二、分块矩阵的初等变换</h3><h3 id="三、n维向量空间"><a href="#三、n维向量空间" class="headerlink" title="三、n维向量空间"></a>三、n维向量空间</h3><h3 id="四、解线性方程组的消元法"><a href="#四、解线性方程组的消元法" class="headerlink" title="四、解线性方程组的消元法"></a>四、解线性方程组的消元法</h3><h3 id="五、向量的线性表示，线性相关和线性无关"><a href="#五、向量的线性表示，线性相关和线性无关" class="headerlink" title="五、向量的线性表示，线性相关和线性无关"></a>五、向量的线性表示，线性相关和线性无关</h3><h3 id="六、线性方程组解的结构"><a href="#六、线性方程组解的结构" class="headerlink" title="六、线性方程组解的结构"></a>六、线性方程组解的结构</h3><h2 id="第一章-矩阵与行列式-1"><a href="#第一章-矩阵与行列式-1" class="headerlink" title="第一章 矩阵与行列式"></a>第一章 矩阵与行列式</h2><h3 id="一、多项式-1"><a href="#一、多项式-1" class="headerlink" title="一、多项式"></a>一、多项式</h3><h4 id="1-多项式的带余除法"><a href="#1-多项式的带余除法" class="headerlink" title="1.多项式的带余除法"></a>1.多项式的带余除法</h4><p>若$p(x)$和$s(x)$是系数在数域F上的多项式，$s(x) \neq 0$,那么存在$p(x)=s(x)q(x)+r(x)$,$deg(r(x))&lt;deg(s(x))$</p><h4 id="2-多项式根与系数的关系"><a href="#2-多项式根与系数的关系" class="headerlink" title="2.多项式根与系数的关系"></a>2.多项式根与系数的关系</h4><p>若$p(x)=a_{m}x^{m}+a_{m-1}x^{m-1}+ \cdots+a_{0}$为系数在复数域C上的m次多项式. $x_{1},x_{1},……,x_{m}$是$p(x)$的m个根.那么</p><script type="math/tex; mode=display">x_{1}+x_{2}+\cdots+x_{m}=-\frac{a_{m-1}}{a_{m}}</script><script type="math/tex; mode=display">x_{1}x_{2}\cdots x_{m}=(-1)^{m}\frac{a_{0}}{a_{m}}</script><h4 id="3-数域"><a href="#3-数域" class="headerlink" title="3.数域"></a>3.数域</h4><ul><li><p>所有的正整数不构成数域</p></li><li><p>所有整数不构成数域</p></li><li><p>数域的特点总结</p><ul><li><p>一个集合</p></li><li><p>两种运算</p></li><li><p>四个规律</p><ul><li><p>加法交换</p></li><li><p>加法结合</p></li><li><p>存在特别元素0</p></li><li><p>存在特别元素1</p></li><li><p>存在负元素</p></li></ul></li></ul></li></ul><h3 id="二、矩阵的概念与运算-1"><a href="#二、矩阵的概念与运算-1" class="headerlink" title="二、矩阵的概念与运算"></a>二、矩阵的概念与运算</h3><h4 id="1-几种特殊类型的矩阵"><a href="#1-几种特殊类型的矩阵" class="headerlink" title="1.几种特殊类型的矩阵"></a>1.几种特殊类型的矩阵</h4><ul><li><p>行矩阵</p></li><li><p>列矩阵</p></li><li><p>零矩阵</p></li><li><p>方阵</p><ul><li><p>单位矩阵</p></li><li><p>对角形矩阵</p></li><li><p>数量矩阵，记作$aE$或者$aI$</p></li><li><p>对称矩阵</p><p>$a_{ij}=a_{ji}$</p></li><li><p>反对称矩阵</p><p>$a_{ij}=-a_{ji}$</p><p>反对称矩阵对角线上元素一定是0</p></li><li><p>三角形矩阵</p><ul><li>上三角</li><li>下三角</li></ul></li></ul></li></ul><h4 id="2-矩阵的运算"><a href="#2-矩阵的运算" class="headerlink" title="2.矩阵的运算"></a>2.矩阵的运算</h4><ul><li><p>矩阵的加法</p><ul><li><p>矩阵加法运算的性质</p><p><script type="math/tex">A+B=B+A;</script>(加法交换律）</p><p>$(A+B)+C=A+(B+C);$（加法结合律）</p><p>$A+O=O+A;$(加法单位元)</p><p>$A+(-A)=O;$(加法逆元）</p></li></ul></li><li><p>矩阵的数乘</p><ul><li><p>矩阵数乘的性质-</p><p>$1A=A$</p><p>$k(lA)=(kl)A$</p><p>$(k+l)A=kA+lA$</p><p>$k(A+B)=kA+kB$</p></li></ul></li><li><p>矩阵的乘法</p><ul><li>$A\cdot B=C$</li></ul><p>​       则$c_{ij}=a_{i1}b_{1j}+a_{i2}b_{2j}+\cdots a_{ip}b_{pj}=\sum\limits_{k=1}^p a_{ik}b_{kj}$</p><ul><li><p>矩阵乘法的性质</p><p>$(AB)C=A(BC)$</p><p>$k(AB)=(kA)B=A(kB)$</p><p>$(A+B)C=AC+BC$</p><p>$C(A+B)=CA+CB$</p><p>$k(A+B)=kA+kB$</p><p>$A_{m\times p}O_{p\times n}=O_{m\times n}$</p></li></ul></li><li><p>矩阵的转置</p><ul><li><p>矩阵转置运算的性质</p><p>$(A^{T})^{T}=A$</p><p>$(A+B)^{T}=A^{T}+B^{T}$</p><p>$(kA)^T=k(A)^T$</p><p>$(AB)^{T}=B^{T}A^{T}$</p></li></ul></li><li><p>矩阵的共轭</p></li><li>矩阵的迹</li></ul><h3 id="三、行列式-1"><a href="#三、行列式-1" class="headerlink" title="三、行列式"></a>三、行列式</h3><h4 id="1-排列的逆序数"><a href="#1-排列的逆序数" class="headerlink" title="1.排列的逆序数"></a>1.排列的逆序数</h4><p>逆序定义：在一个排列$(i_{1}i_{2}\cdots i_{t}\cdots i_{n}),t<s$中，若数$i_{t}>i_{s}$则称这两个数组成此排列的一个逆序；否则称这两个数组成此排列的一个逆序；否则称这两个数组成此排列的一个顺序。</p><p>逆序数定义：在一个排列$i_{1}i_{2}\cdots i_{t}\cdots i_{n}$中逆序的总数称为此排列的逆序数。记为$\tau(i_{1}i_{2}\cdots i_{t}\cdots i_{n})$</p><p>逆序数为奇数的排列为奇排列；</p><p>逆序数为偶数的排列为偶排列。</p><p>一个排列中的任意两个元素对换，排列改变奇偶性。</p><h4 id="2-行列式"><a href="#2-行列式" class="headerlink" title="2.行列式"></a>2.行列式</h4><ul><li>行列式的定义</li><li>贡献法</li><li><p>行列式的性质</p><ul><li>$D=D^{T}$</li><li>行列式的两行（列）互换，行列式的值变号。</li><li>如果行列式有两行（列）完全相同，则此行列式为零。</li><li>行列式的某一行（列）中所有的元素都乘以同一个数k，等于用数k乘此行列式。</li><li>行列式中如果有两行（列）元素成比例，则此行列式为零。</li><li>若行列式的某一行（列)的元素都是两数之和，则该行列式等于两行列式之和。</li><li>把行列式的某一行（列）的各元素乘以同一数然后加到另一行（列）对应的元素上去，行列式不变。</li></ul></li><li><p>行列式的初等变换</p><ul><li>交换行列式的两行（列）</li><li>行列式的一行(列)同乘以一个不等于0的数k</li><li>行列式的一行（列）乘以一个数以后加至行列式的另一行（列）</li></ul></li><li><p>行列式按行（列）展开</p><ul><li>余子式定义：在n阶行列式$D_{n}$中，划掉元素$a_{ij}$所在的行与列中的所有元素，余下的元素按原来的次序构成的n-1阶行列式，成为元素$a_{ij}$的余子式，记作$M_{ij}$.</li><li><p>代数余子式定义：称$(-1)^{i+j}M_{ij}$为元素$a_{ij}$的代数余子式，记作$A_{ij}$</p></li><li><p>行列式按行（列）展开定理：</p><p>n阶行列式D的值等于它任一行的各元素与其对应的代数余子式乘积之和。</p><ul><li>推论 n阶行列式D的任一行（列）的各元素与另一行（列）对应的各元素的代数余子式的乘积之和等于0.</li></ul></li></ul></li><li><p>范德蒙德行列式</p><script type="math/tex; mode=display">D_{n}=\begin{vmatrix}1&1&1&\cdots&1\\x_{1}&x_{2}&x_{3}&\cdots&x_{n}\\x_{1}^{2}&x_{2}^{2}&x_{3}^{2}&\cdots&x_{n}^{2}\\\cdots&\cdots&\cdots&\cdots&\cdots&\\x_{1}^{n-1}&x_{2}^{n-1}&x_{3}^{n-1}&\cdots&x_{n}^{n-1}\\\end{vmatrix}=\Pi_{1\leq j<i\leq n}(x_{i}-x_{j})</script></li><li><p>拉普拉斯展开定理</p><ul><li><p>在n阶行列式D中，任取k行k列，位于这k行k列交叉位置的元素按行列式D中的相对位置按原行列式D中的相对位置排成的k阶行列式N称为行列式D的一个k阶子式。</p></li><li><p>在行列式D中，划去k阶子式N所在的k行k列，剩余元素按原行列式D中的相对位置排成的n-k阶行列式M称为k阶子式N的余子式。</p></li><li><p>如果子式N的k行k列在D中的行标与列标分别为$i_{1},i_{2},\cdots ,i_{k},j_{1},j_{2},\cdots ,j_{k}$则称<script type="math/tex">A=(-1)^{(i_{1}+i_{2}+\cdots +i_{k}+j_{1}+j_{2}+\cdots +j_{k})}M</script></p><p>为N的代数余子式。</p></li><li><p><strong>Laplace定理</strong>  设在n阶行列式D中，取定某k行，则D位于这k行的所有k阶子式 $N_{i}(i=1,2,3,…,t)$与它们各自对应的代数余子式$A_{i}$的乘积之和等于行列式D，即</p><p>$D=N_{1}A_{1}+N_{2}A_{2}+\cdots+N_{t}A_{t}=\sum\limits_{i=1}^tN_{i}A_{i}$</p></li></ul></li><li><p>行列式的乘积法则</p><p>$|A_{n}B_{n}|=|A_{n}||B_{n}|$</p></li></ul><h3 id="四、可逆矩阵-1"><a href="#四、可逆矩阵-1" class="headerlink" title="四、可逆矩阵"></a>四、可逆矩阵</h3><h4 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h4><p>设A为n阶方阵，若存在n阶方阵B，使得$AB=BA=E$则称A是n阶可逆矩阵，或可逆阵，称B是A的逆矩阵。A的逆矩阵记作$A^{-1}$</p><h4 id="2-条件"><a href="#2-条件" class="headerlink" title="2.条件"></a>2.条件</h4><p>矩阵A可逆的充分必要条件是A的行列式不等于0.</p><h4 id="3-伴随矩阵"><a href="#3-伴随矩阵" class="headerlink" title="3.伴随矩阵"></a>3.伴随矩阵</h4><ul><li><p>伴随矩阵的性质</p><p>$AA^{<em>}=A^{</em>}A=|A|E_{n}$</p></li></ul><h4 id="4-逆矩阵的性质"><a href="#4-逆矩阵的性质" class="headerlink" title="4.逆矩阵的性质"></a>4.逆矩阵的性质</h4><ul><li>$(A^{-1})^{-1}=A$</li><li>$若k\neq 0，则(kA)^{-1}=\frac{1}{k}A^{-1}$</li><li>$(A_{1}A_{2}\cdots A_{m})^{-1}= A_{m}^{-1}A_{m-1}^{-1}\cdots A_{1}^{-1}$</li><li>$(A^{T})^{-1}=(A^{-1})^{T}$</li><li>$|A^{-1}|=|A|^{-1}$</li><li>$(A^{m})^{-1}=(A^{-1})^{m}$</li><li>$|A^{*}|=|A|^{n-1}$</li></ul><h4 id="5-一些小结论"><a href="#5-一些小结论" class="headerlink" title="5.一些小结论"></a>5.一些小结论</h4><ul><li><p>若A,B可逆：</p><script type="math/tex; mode=display">{\begin{pmatrix}A&O\\O&B\\\end{pmatrix}}^{-1}= \begin{pmatrix}A^{-1}&O\\O&B^{-1}\\\end{pmatrix}</script><script type="math/tex; mode=display">{\begin{pmatrix}O&A\\B&O\\\end{pmatrix}}^{-1}= \begin{pmatrix}O&B^{-1}\\A^{-1}&O\\\end{pmatrix}​</script></li><li><p>若A,C可逆：</p><script type="math/tex; mode=display">{\begin{pmatrix}A&B\\O&C\\\end{pmatrix}}^{-1}= \begin{pmatrix}A^{-1}&-A^{-1}BC^{-1}\\O&C^{-1}\\\end{pmatrix}</script></li></ul><h3 id="五、克莱姆法则-1"><a href="#五、克莱姆法则-1" class="headerlink" title="五、克莱姆法则"></a>五、克莱姆法则</h3><ul><li><p>法则内容：</p><p>有线性方程组：</p><script type="math/tex; mode=display">D(x) = \begin{cases}a_{11}x_{1}+a_{12}x_{2}+\cdots+a_{1n}x_{n}=b_{1}\\a_{21}x_{1}+a_{22}x_{2}+\cdots+a_{2n}x_{n}=b_{2}\\\cdots\cdots\cdots\cdots\cdots\cdots\cdots\cdots\cdots\cdots\\a_{n1}x_{1}+a_{n2}x_{2}+\cdots+a_{nn}x_{n}=b_{n}\\\end{cases}</script><p>的系数行列式不等于0，则非齐次方程组一定有解，且解是唯一的。</p><p>解可以表述为：</p><p>$x_{1}=\frac{D_{1}}{D},x_{2}=\frac{D_{2}}{D},\cdots,x_{n}=\frac{D_{n}}{D}$</p></li><li><p>克莱姆法则的证明：</p><p>可将原方程组写成矩阵方程$AX=B$,若系数矩阵A可逆，则解向量X为：</p><script type="math/tex; mode=display">X=A^{-1}B=\frac{A^{*}B}{D}</script></li><li><p>如果线性方程组无解或者有两个不同的解，则它的系数行列式必为零。</p></li></ul><h3 id="六、矩阵的分块-1"><a href="#六、矩阵的分块-1" class="headerlink" title="六、矩阵的分块"></a>六、矩阵的分块</h3><ul><li><p>定义：将矩阵A用若干条纵线和横线分成许多小矩阵，每个小矩阵称为A的一个子块，以这些子块为元素的形式上的矩阵称为分块矩阵。</p></li><li><p>基本原则</p><p>不管整体，还是局部小块，都必须符合矩阵运算规则</p></li><li><p>若$AB=O$,则矩阵B的列都是齐次线性方程组$AX=0$的解。</p></li><li><p>经常将矩阵分为行（列）向量，将矩阵相乘转化。</p></li><li><p>标准单位行（列）向量：</p><ul><li>以行为例：$\varepsilon_{1}=\begin{pmatrix}1\\0\\\vdots\\0\\\end{pmatrix}<script type="math/tex">\varepsilon_{2}=\begin{pmatrix}0\\1\\\vdots\\0\\\end{pmatrix}</script>\cdots$$\varepsilon_{n}=\begin{pmatrix}0\\0\\\vdots\\1\\\end{pmatrix}$</li></ul></li></ul><pre><code>特点：任何一个n维行向量，都可以由上述n个行向量线性表示出来​           任意一个标准单位行向量都无法由其他向量线性表示出来</code></pre><h3 id="七、行列式的计算-1"><a href="#七、行列式的计算-1" class="headerlink" title="七、行列式的计算"></a>七、行列式的计算</h3><ul><li><p><strong>各行/列和固定行列式</strong></p><p>全部加到某一行/列上，再进行相减。</p></li><li><p><strong>爪形行列式</strong></p><p>用初等变换化成三角形行列式</p></li><li><p><strong>除对角线之外均相同行列式</strong></p><p>用初等变换化为爪形</p></li><li><p><strong>两三角形行列式</strong></p><p>拆行-递推</p></li><li><p><strong>两对角线形行列式</strong></p><p>使用laplace定理</p></li><li><p><strong>三对角形</strong></p><p>按第一行展开后化为数列问题解决</p></li><li><p><strong>vandemonde行列式问题</strong></p></li></ul><h3 id="八、几个特殊的矩阵-1"><a href="#八、几个特殊的矩阵-1" class="headerlink" title="八、几个特殊的矩阵"></a>八、几个特殊的矩阵</h3><ul><li>幂零矩阵<ul><li>定义：设A为n阶方阵，若存在整数m，使得$A^{m}=O$,则称A为幂零矩阵，称最小的整数m为幂零指数</li><li>幂零矩阵的性质<ul><li>存在列向量$\alpha$,使得$A^{m-1}\alpha\neq0$</li><li>方程组$x_{1}\alpha+x_{1}A\alpha+\cdots+x_{m}A^{m-1}\alpha=0$只有零解</li></ul></li></ul></li><li>幂等矩阵<ul><li>定义：设A为n阶方阵，若$A^{2}=A$，那么称A为幂等矩阵（投影矩阵）</li><li>性质：设A为n阶幂等矩阵.令$U=${${Ax|x\epsilon\mathbb{R}^{n}}$},$V=${${x\epsilon\mathbb{R}|Ax=0}$}<ul><li>对任意$u\epsilon U$有$Au=u$</li><li>对任意$v\epsilon V$有$Av=0$</li><li>$U\bigcap V={0}$</li><li>对任意向量，存在唯一的向量$u\epsilon U$，$v\epsilon V$使得向量为两者之和</li></ul></li></ul></li><li>对合矩阵<ul><li>定义：设A为n阶方阵，若$A^{2}=E$，那么称A为对合矩阵。</li></ul></li><li>周期矩阵<ul><li>定义：设A为n阶复方阵，若存在正整数$A^{k}=E$,那么称A为周期矩阵。</li></ul></li></ul><h2 id="第二章-线性方程组理论-1"><a href="#第二章-线性方程组理论-1" class="headerlink" title="第二章 线性方程组理论"></a>第二章 线性方程组理论</h2><h3 id="一、矩阵的相抵标准形-1"><a href="#一、矩阵的相抵标准形-1" class="headerlink" title="一、矩阵的相抵标准形"></a>一、矩阵的相抵标准形</h3><h4 id="矩阵的初等变换"><a href="#矩阵的初等变换" class="headerlink" title="矩阵的初等变换"></a>矩阵的初等变换</h4><ul><li>交换矩阵的两行（列）；</li><li>将矩阵的某一行（列）的各个元素乘以同一个非零的数k；</li><li>将矩阵的某一行（列）的各个元素乘以同一个数k后，加到另一行（列）上去；</li></ul><h4 id="等价关系"><a href="#等价关系" class="headerlink" title="等价关系"></a>等价关系</h4><p>若A和B能互相经过初等变换得到，那么称A与B等价。</p><p>等价关系：</p><p>①A∽A（反身性）</p><p>②若A∽B，则B∽A</p><p>③若A∽B,B∽C，则A∽C（传递性）</p><h4 id="行阶梯形矩阵的定义"><a href="#行阶梯形矩阵的定义" class="headerlink" title="行阶梯形矩阵的定义"></a>行阶梯形矩阵的定义</h4><p>（1）若矩阵A存在零行，则零行在非零行的下方；</p><p>（2)设A的第k个非零行的第一个非零元素在第$j_{k}$列，共有r个非零行，则$j_{1}&lt;j_{2}&lt;\cdots&lt;j_{r}$;</p><p>那么我们称矩阵A为行阶梯形矩阵。</p><ul><li>定理：任意矩阵可以经过单纯的初等行变换化为行阶梯形矩阵（不唯一）。</li></ul><h4 id="规范的行阶梯形矩阵的定义"><a href="#规范的行阶梯形矩阵的定义" class="headerlink" title="规范的行阶梯形矩阵的定义"></a>规范的行阶梯形矩阵的定义</h4><p>矩阵A是一个行阶梯形矩阵，如果A满足下述条件：</p><p>（1）每个非零行的第一个非零元素为1；</p><p>（2）每个非零行的第一个非零元素所在列的其他的元素都为0；</p><p>那么我们称矩阵A为规范的行阶梯形矩阵。</p><ul><li>定理：任意矩阵可以经过单纯的初等行变换化为规范的行阶梯形矩阵（唯一）。</li><li>定理：任意矩阵可以经过初等行列变换化为标准形矩阵。</li></ul><h4 id="矩阵的等价"><a href="#矩阵的等价" class="headerlink" title="矩阵的等价"></a>矩阵的等价</h4><p>如果矩阵A经过有限次初等变换化为矩阵B，则称矩阵A与B等价（相抵）。</p><p>同样的，矩阵的等价关系也有</p><ul><li>自反性</li><li>对称性</li><li>传递性</li></ul><p>(I)矩阵A与B等价的充分必要条件是：</p><p>存在可逆矩阵P和Q，使得$PAQ=B$</p><p>(II)m行矩阵A与B等价的充分必要条件是：</p><p>A与B有相同的标准形</p><h4 id="初等矩阵"><a href="#初等矩阵" class="headerlink" title="初等矩阵"></a>初等矩阵</h4><ul><li><p>定义：单位矩阵经过一次初等变换所得到的矩阵称为初等矩阵</p></li><li><p>定理：用一个m（n）阶初等矩阵左（右）乘一个m×n阶矩阵，相当于对这个矩阵作相应的初等行（列）变换</p></li><li>定理：对矩阵初等行（列）变换相当于在这个矩阵左（右）边乘以一个相应的初等矩阵。</li><li>推论：初等矩阵都是可逆矩阵，且其逆矩阵是同类型的初等矩阵。</li><li><p>定理：设A为m×n矩阵，则存在矩阵$R_{1},R_{2},\cdots,R_{s}$,使得$R_{1}R_{2}\cdots R_{s}A$为（规范的）阶梯形矩阵；进一步，存在初等矩阵$C_{1},C_{2},\cdots,C_{s}$,使得$R_{1}R_{2}\cdots R_{s}AC_{1}C_{2}\cdots C_{s}$</p></li><li><p>推论：对于mn矩阵A，存在m阶可逆矩阵P和n阶可逆矩阵Q,使得</p><script type="math/tex; mode=display">PAQ=\begin{pmatrix}E_{r}&O\\O&O\\\end{pmatrix}</script></li><li><p>推论：设A为可逆矩阵，则存在初等矩阵$R_{1},R_{2},\cdots,R_{s}$，使得$R_{1}R_{2}\cdots R_{s}A=E$；这样，$A=R_{s}^{-1}R_{s}^{-1}\cdots R_{1}^{-1};$</p></li><li>推论：n阶矩阵可逆且仅当它可以表示成一些初等矩阵的乘积。</li><li>推论：设A为m×n矩阵，P为m阶可逆矩阵，Q为n阶可逆矩阵，则PA,AQ,PAQ有相同的标准形。</li></ul><h4 id="求逆矩阵的初等变换法"><a href="#求逆矩阵的初等变换法" class="headerlink" title="求逆矩阵的初等变换法"></a>求逆矩阵的初等变换法</h4><p>注意到</p><p>$R_{1}R_{2}\cdots R_{s}A=E$</p><p>$R_{1}R_{2}\cdots R_{s}=A^{-1}$</p><p>$R_{1}R_{2}\cdots R_{s}E=A^{-1}$</p><p>构造一个分块矩阵$(A\quad E)$，我们有</p><p>$R_{1}R_{2}\cdots R_{s}(A\quad E)=(R_{1}R_{2}\cdots R_{s}A\quad R_{1}R_{2}\cdots R_{s}E)=(E\quad A^{-1})$</p><h4 id="矩阵的秩"><a href="#矩阵的秩" class="headerlink" title="矩阵的秩"></a>矩阵的秩</h4><ul><li>m行n列矩阵A的k阶子式子概念：</li></ul><p>令$k\le min${m,n},从A中取k行，k列的交叉点上元素，按照它们在矩阵A中的相对位置组成的k阶行列式。</p><ul><li>矩阵的秩</li></ul><p>设矩阵A是mxn阵，若存在一个r阶子式不为0，而矩阵A的全部r+1阶子式都为0，则称矩阵A的秩为r，记作r（A）=r。</p><ul><li><p>矩阵秩的性质</p><p>(1)唯一性；</p><p>(2)$r(A_{m×n})\le min${m，n}；</p><p>(3)若矩阵A有一个r阶子式不为0，则$r(A)\ge r$;</p><p>(4)若矩阵A的所有r阶子式都为0，则$r(A)\le r$</p><p>(5)$r(A^{T})=r(A)$</p><p>(6)行阶梯形矩阵的秩等于非零行的数目；</p><p>(7)n阶可逆矩阵的秩等于n。</p></li><li><p>行（列）满秩矩阵：</p><p>设矩阵A为m×n阶矩阵，若r（A）=m（r(A)=n),则称矩阵A为行（列）满秩矩阵.</p></li></ul><p>A是n阶可逆阵当且仅当A是n阶满秩矩阵，当且仅当A是n阶非奇异阵。</p><ul><li><p>初等变换不改变矩阵的秩</p><p>矩阵的秩是矩阵变换下的不变量</p></li><li><p>推论：设矩阵A的秩为r，即r(A)=r,则A的标准形矩阵为：</p><script type="math/tex; mode=display">\begin{pmatrix}E_{r}&O\\O&O\\\end{pmatrix}</script></li><li><p>矩阵乘以一个可逆阵，秩不变。</p></li><li><p>A为m×n矩阵，r（A）=r，则A可以分解为r个秩为1的矩阵的和</p></li><li><p>A为m×n矩阵，r（A）=r当且仅当存在m×r矩阵P和r×n矩阵Q，满足r(P)=r(Q)=r,且A=PQ</p><h3 id="二、分块矩阵的初等变换-1"><a href="#二、分块矩阵的初等变换-1" class="headerlink" title="二、分块矩阵的初等变换"></a>二、分块矩阵的初等变换</h3><h4 id="分块矩阵初等变换和分块初等矩阵"><a href="#分块矩阵初等变换和分块初等矩阵" class="headerlink" title="分块矩阵初等变换和分块初等矩阵"></a>分块矩阵初等变换和分块初等矩阵</h4></li><li><p>对分块矩阵的行列实施下列三种操作之一，称为对分块矩阵实施了一次初等变换：</p><ul><li>交换分块矩阵的两行</li><li>用一个可逆矩阵P(Q)左（右）乘分块的某行的各子块</li><li>用一个适当阶数的矩阵左（右）乘分块矩阵某行（列）的各子块后加到另一行的对应子块上去</li></ul></li><li><p>分块初等矩阵</p><p>分块的单位矩阵经过一次分块初等变换所得到的矩阵称为分块初等矩阵</p></li><li><p>定理:用分块初等矩阵左（右）乘分块矩阵相当于对分块矩阵实施相应的分块初等变换</p></li><li><p>行列式第一降阶定理：</p><p>设</p><script type="math/tex; mode=display">M=\begin{pmatrix}A&B\\C&D\\\end{pmatrix}</script><p>且$|A|\neq0$,则$|M|=|A|\cdot |D-CA^{-1}B|$</p></li></ul><h4 id="矩阵的秩重要性质整理"><a href="#矩阵的秩重要性质整理" class="headerlink" title="矩阵的秩重要性质整理"></a>矩阵的秩重要性质整理</h4><p>对$A\epsilon\mathbb{R}^{m×n}$</p><ul><li><p>0$\le r(A)\le min(n,m)$;</p></li><li><p>$r(A^{T})=r(A)，r(kA)=r(A)(k\neq 0)$</p></li><li><p>若$P\epsilon\mathbb{R}^{m×m}$$Q\epsilon\mathbb{R}^{n×n}$且P,Q可逆，则r（PAQ)=r(A);</p></li><li><p>$0\le r(A+B)\le r(A)+r(B);$</p></li><li><p>$max(r(A),r(B),r(A+B))\le r[A\quad B]\le r(A)+r(B)$</p></li><li><script type="math/tex; mode=display">\begin{pmatrix}A&O\\O&B\\\end{pmatrix}=r(A)+r(B)</script></li><li><script type="math/tex; mode=display">\begin{pmatrix}A&O\\C&B\\\end{pmatrix}\ge r(A)+r(B)</script></li><li><script type="math/tex; mode=display">\begin{pmatrix}A&C\\O&B\\\end{pmatrix}\ge r(A)+r(B)</script></li><li><p>$r(A)+r(B)-n\le r(AB) \le min(r(A),r(B));$</p></li><li><p>$r(A^{*})的情况（若r(A)=n,则n；n-1则1；否则0）；$</p></li><li><p>Frobenius不等式：$r(ABC)\ge r(AB)+r(BC)-r(B);$</p></li><li><p>$r(A)=r(A^{T}A)=r(A A^{T})=r(A^{T})$</p></li></ul><h3 id="三、n维向量空间-1"><a href="#三、n维向量空间-1" class="headerlink" title="三、n维向量空间"></a>三、n维向量空间</h3><ul><li><p>n维向量的运算性质</p><p>加法：</p><p>$(1)\alpha +\beta=\beta +\alpha$</p><p>$(2)(\alpha +\beta)+\gamma =\alpha+(\beta +\gamma)$</p><p>$(3)\alpha+0=\alpha$</p><p>$(4)\alpha+(-\alpha)=0$</p><p>数乘：</p><p>$(5) 1\alpha=\alpha$</p><p>$(6)k(l\alpha)=l(k\alpha)=(kl)\alpha$</p><p>$(7)k(\alpha +\beta)=k\alpha +k\beta$</p><p>$(8)(k+l)\alpha=k\alpha+l\alpha$</p></li><li><p>n维向量空间的子空间</p><p>$S\subseteq F^{n}$,且S非空。如果S对于加法与数乘运算封闭，那么说S是$F^{n}$的子空间。、</p></li></ul><h3 id="四、解线性方程组的消元法-1"><a href="#四、解线性方程组的消元法-1" class="headerlink" title="四、解线性方程组的消元法"></a>四、解线性方程组的消元法</h3><ul><li>线性方程组<br>$$<br>\begin{align*}</li></ul><p>  \begin{split}</p><p>  \left \{</p><p>  \begin{array}{ll}</p><pre><code>  a_&#123;11&#125;x_&#123;1&#125;+a_&#123;12&#125;x_&#123;2&#125;+\cdots a_&#123;1n&#125;x_&#123;n&#125;=b_&#123;1&#125;\\  a_&#123;21&#125;x_&#123;1&#125;+a_&#123;22&#125;x_&#123;2&#125;+\cdots a_&#123;2n&#125;x_&#123;n&#125;=b_&#123;2&#125;\\  \cdots \cdots \cdots \cdots\cdots \cdots \cdots \cdots \cdots \cdots  \\  a_&#123;n1&#125;x_&#123;1&#125;+a_&#123;n2&#125;x_&#123;2&#125;+\cdots a_&#123;nn&#125;x_&#123;n&#125;=b_&#123;n&#125;\\</code></pre><p>  \end{array}</p><p>  \right.</p><p>  \end{split}</p><p>  \end{align*}</p><script type="math/tex; mode=display">$b_{1},b_{2},\cdots ,b_{m}$不全为0时，称为非齐次线性方程组，$b_{1},b_{2},\cdots ,b_{m}$全为0时，称为齐次线性方程组。+ $系数矩阵的秩\le 增广矩阵的秩\le 系数矩阵的秩+1$+ 如果两个方程组的解的集合完全相同，那么我们所这两个方程组是同解方程组。+ 消元法解线性方程组AX=B方法：  （1）通过初等行变换将线性方程组的增广矩阵化为规范的阶梯形矩阵T；  （2）写出以T为增广矩阵的同解方程组；  （3）将一些自由未知量移到等式右边。+ 自由未知量的个数为：未知数的个数-系数矩阵的秩+ 解的情况总结：  1.系数矩阵的秩=增广矩阵的秩时，有解  2.系数矩阵的秩=增广矩阵的秩，没有自由未知量（n-r（A)=0)时，有唯一解  3.系数矩阵的秩=增广矩阵的秩，有自由未知量（n-r（A)>0)时，有无穷多解  4.系数矩阵的秩不等于增广矩阵的秩，无解+ 齐次线性方程组AX=O总是有解的（0解）。  方程组存在非0解当且仅当r（A）=r<n  方程组只有0解当且仅当r（A)=n### 五、向量的线性表示，线性相关和线性无关+ 向量组线性表出具有传递性+ 向量组的等价  设有两个向量组$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}和\beta_{1},\beta_{2},\cdots ,\beta_{t}$，$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$可由$\beta_{1},\beta_{2},\cdots ,\beta_{t}$线性表出，$\beta_{1},\beta_{2},\cdots ,\beta_{t}$也可由$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$线性表出，那么称向量组$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$与向量组$\beta_{1},\beta_{2},\cdots ,\beta_{t}$等价。  向量组等价意味着可以相互表示+ 线性相关与线性无关  设$\alpha_{1},\alpha_{2},\cdots ,\alpha_{m}$是m个n维向量，若存在m个不全为0的数$k_{1},k_{2}\cdots k_{m}$,使得</script><p>  k_{1}\alpha_{1}+k_{2}\alpha_{2}+\cdots +k_{m}\alpha_{m}=0</p><p>  $$<br>  其中0为n维向量，则称$\alpha_{1},\alpha_{2},\cdots ,\alpha_{m}$线性相关；否则称它们线性无关。</p><ul><li><p>一些有关向量线性相关性的结论</p><p>m个n维向量中，若含有0向量，则这m个向量线性相关；</p><p>m个n维向量中，若有一部分向量线性相关，则这m个向量线性相关；</p><p>若m个n维向量是线性无关的，则这m个向量中的任何一部分向量，放在一起，也是线性无关的</p><p>$\alpha_{1},\alpha_{2},\cdots ,\alpha_{m}$线性相关（无关）$&lt;=&gt;$齐次线性方程组$x_{1}\alpha_{1}+x_{2}\alpha_{2}+\cdots +x_{m}\alpha_{m}=0$有非零解（只有零解）</p></li><li><p>向量组的极大线性无关组</p><p>定义：设有向量组$\alpha_{1},\alpha_{2},\cdots ,\alpha_{m}$，若$\alpha_{i_{1}},\alpha_{i_{2}},\cdots ,\alpha_{i_{r}}$是向量组的r个向量，且满足</p><p>（1）$\alpha_{i_{1}},\alpha_{i_{2}},\cdots ,\alpha_{i_{r}}$线性无关</p><p>（2）向量组$\alpha_{1},\alpha_{2},\cdots ,\alpha_{m}$的任意一个向量都可以由$\alpha_{i_{1}},\alpha_{i_{2}},\cdots ,\alpha_{i_{r}}$线性表出，</p><p>则称$\alpha_{i_{1}},\alpha_{i_{2}},\cdots ,\alpha_{i_{r}}$是向量组$\alpha_{1},\alpha_{2},\cdots ,\alpha_{m}$的一个极大线性无关组。</p></li><li><p>定理：给定两个向量组</p><p>（I）$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$</p><p>（II）$\beta_{1},\beta_{2},\cdots ,\beta_{t}$</p><p>如果（1)$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$可由$\beta_{1},\beta_{2},\cdots ,\beta_{t}$线性表出（2）$s&gt;t$</p><p>那么$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$线性相关</p></li><li><p>给定两个向量组</p><p>（I）$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$</p><p>（II）$\beta_{1},\beta_{2},\cdots ,\beta_{t}$</p><p>如果（1)$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$可由$\beta_{1},\beta_{2},\cdots ,\beta_{t}$线性表出（2）$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$线性无关</p><p>那么$s\le t$</p></li><li><p>关于向量组的秩的有关结论</p><ul><li>向量组$\alpha_{1},\alpha_{2},\cdots ,\alpha_{m}$线性无关$&lt;=&gt;r(\alpha_{1},\alpha_{2},\cdots ,\alpha_{m})=m$</li><li>$r(\alpha_{1},\alpha_{2},\cdots ,\alpha_{m})=r&gt;0$,则向量组中任意k&gt;r个向量都是线性无关的。</li><li>若$r(\alpha_{1},\alpha_{2},\cdots ,\alpha_{m})=r&gt;0$，则向量组任意r个线性无关的向量都是它的一个极大线性无关组</li><li>若$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$可由$\beta_{1},\beta_{2},\cdots ,\beta_{t}$线性表出，则$r(\alpha_{1},\alpha_{2},\cdots ,\alpha_{s})\le r(\beta_{1},\beta_{2},\cdots ,\beta_{t})$</li><li>等价的向量组有相同的秩</li></ul></li><li><p>矩阵的秩=矩阵的列秩=矩阵的行秩</p></li><li><p>$\alpha_{1},\alpha_{2},\cdots ,\alpha_{s}$线性无关，$(\beta_{1}\quad\beta_{2}\quad\cdots \beta_{m})=(\alpha_{1}\quad\alpha_{2}\quad\cdots \alpha_{s})A_{s×m}$</p><p>则r($\beta_{1},\beta_{2},\cdots ,\beta_{m}$)=r（A)</p></li></ul><h3 id="六、线性方程组解的结构-1"><a href="#六、线性方程组解的结构-1" class="headerlink" title="六、线性方程组解的结构"></a>六、线性方程组解的结构</h3><ul><li><p>齐次线性方程组任意解的线性组合还是方程组的解</p></li><li><p>解的结构：</p><p>定义:（1）设$\xi_{1},\xi_{2},\cdots,\xi_{s}$线性无关（2）齐次线性方程组的任意一个解都可以由$\xi_{1},\xi_{2},\cdots,\xi_{s}$线性表出</p><p>则称$\xi_{1},\xi_{2},\cdots,\xi_{s}$为齐次线性方程组的基础解系。</p></li><li><p>非齐次方程组解的性质：</p><p>设$\xi_{1},\xi_{2}$是线性方程组Ax=B的解</p><p>那么（I）$\xi_{1}-\xi_{2}$是齐次线性方程组Ax=0的解；</p><p>​       （2）若$\xi$是线性方程组Ax=B的解，$\rho$是线性方程组Ax=0的解，那么$\xi+\rho$是方程组Ax=B的解</p></li><li><p>非齐次线性方程组的通解=非齐次线性方程组的特解+对应的齐次线性方程组的通解</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>通过hexo和github创建个人blog指北</title>
      <link href="/2023/02/06/tong-guo-hexo-he-github-chuang-jian-ge-ren-blog-zhi-bei/"/>
      <url>/2023/02/06/tong-guo-hexo-he-github-chuang-jian-ge-ren-blog-zhi-bei/</url>
      
        <content type="html"><![CDATA[<h1 id="通过hexo和github创建个人blog指北"><a href="#通过hexo和github创建个人blog指北" class="headerlink" title="通过hexo和github创建个人blog指北"></a>通过hexo和github创建个人blog指北</h1><p><strong>寒假闲来无事，就想搞个blog空间放点自己个人感想之类（深受wmgg和cnjj影响），正巧学院要求每个人都要写个人感想（卷素拓），就下定决心搞一个，途中充满坎坷，最后五次重头再来，终于成功搭建。</strong></p><p><strong>在此过程中，感谢wmgg和cnjj的帮忙~要不是没有他们接受我很多次提问，可能我现在还在初级阶段qaq。</strong></p><p><strong>话不多说，记录一下我的创建博客经历吧~希望对你有用！</strong></p><p>先简要陈列一下大致的过程：</p><p>1.相关工具安装</p><p>2.github相关问题处理</p><p>3.换主题！（原来的主题真的太丑……）</p><p>4.发表文章！</p><p>5.嘚瑟一下（bushi）</p><p>下面就一步步慢慢来吧~</p><h2 id="一、相关工具安装"><a href="#一、相关工具安装" class="headerlink" title="一、相关工具安装"></a>一、相关工具安装</h2><h3 id="安装GIT"><a href="#安装GIT" class="headerlink" title="安装GIT"></a>安装GIT</h3><p><strong>Windows端</strong></p><p>到Git官网下载<strong><em>Git Download</em></strong>，安装后就可以用 <strong>Git Bash</strong> 命令行工具来使用Git了。安装好后，在Git Bash中输入git —version检验是否安装成功。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p><strong>Windows端</strong></p><p>Node.js官网下载LTS版本，64位msi安装包，安装后分别在命令行（win+R输入cmd调用）输入node -v和npm -v检验PATH环境变量是否配置了Node.js</p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>Windows环境进入Git Bash，Linux环境进入终端，开始搭博客啦！</p><p>首先新建一个文件夹blog来存放自己的博客，然后cd进入到这个文件夹下，输入下面的命令安装Hexo:</p><p><strong>npm install -g hexo-cli</strong></p><p>同样，安装完毕后需要hexo -v查看一下版本。</p><p>至此需要的工具都安装完了。接下来初始化一下Hexo:</p><p><strong>hexo init blog</strong></p><p>这里的blog取什么名字都行。</p><p>这时，在你的blog文件夹下会出现一个新的blog文件夹，进入到这个子文件夹后新建Hexo。</p><p><strong>npm install</strong></p><p>新建完成后，指定文件夹目录下应该有以下主要文件：</p><ul><li>node_modules：依赖包</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放自己的文章</li><li>themes：网站主题</li><li>_config.yml：博客的配置文件</li></ul><p><strong>hexo g</strong></p><p><strong>hexo server</strong></p><p>输入以上命令来开启hexo服务，在浏览器中输入localhost:4000就可以看到博客的初始化界面啦，现在还是有点丑丑的。</p><h2 id="二、github相关问题处理"><a href="#二、github相关问题处理" class="headerlink" title="二、github相关问题处理"></a>二、github相关问题处理</h2><p>首先，要做好准备工作，登陆github官网创建个人账号，并且在github中新建一个<strong>和你用户名相同的</strong> 仓库，后面加 <strong>.github.io</strong>，也就是<strong>xxxx.github.io</strong>，只有这样将来要部署到GitHub Page的时候才会被识别。</p><p>这里值得一提的是，github只有英文版，如果英文不太好的友友们（我自己就是）可以用谷歌浏览器打开，让强大的智能替我们翻译一下~</p><h3 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a><strong>生成SSH添加到GitHub</strong></h3><p>回到Git Bash中，输入以下命令：</p><p><strong>git config —global user.name “yourname”</strong></p><p><strong>git config —global user.email “youremail”</strong></p><p>这里的<strong><em>yourname</em></strong>对应你的GitHub用户名，<strong><em>youremail</em></strong>对应你的GitHub注册邮箱，这样GitHub才能知道你是不是对应它的用户。不放心的话可以用下面两条命令来检查一下：</p><p><strong>git config user.name</strong></p><p><strong>git config user.email</strong></p><p>然后创建SSH，你可以选择密钥的保存位置，然后一路回车。</p><p><strong>ssh-keygen -t rsa -C “youremail”</strong></p><p>这里面可能有一步要输入yes，注意着点就ok</p><p>创建成功后，文件夹下会有两个文件，其中<strong><em>id_rsa</em></strong>是你这台电脑的私人密钥，<strong><em>id_rsa.pub\</em></strong>是公共密钥。把公钥放在GitHub上，这样当你链接GitHub自己的账户时，她就会根据公钥匹配你的私钥，匹配成功才能通过git上传自己的文件到GitHub上。</p><p>在GitHub的setting（右上角头像下拉）中找到<strong><em>SSH and GPG keys</em></strong>的设置选项，点击<strong><em>New SSH key\</em></strong>，把<strong><em>id_rsa.pub\</em></strong>里面的内容复制进去。</p><p>然后回到Git Bash，试试是否配置成功。</p><p>配置成功后，大概率还会收到邮件通知你已经配对成功辣！</p><p>革命成功大半！！！</p><h3 id="将Hexo部署到GitHub"><a href="#将Hexo部署到GitHub" class="headerlink" title="将Hexo部署到GitHub"></a><strong>将Hexo部署到GitHub</strong></h3><p>在这步中，我们将要把Hexo和GitHub关联起来，使得Hexo生成的文章都部署到GitHub上。</p><p>打开网站配置文件_config.yml，拉到最后，将deploy部分修改为：</p><p><strong>deploy:</strong></p><p> <strong>type: git</strong></p><p> <strong>repo: <a href="https://github.com/YourGithubName/YourGithubName.github.io.git">https://github.com/YourGithubName/YourGithubName.github.io.git</a></strong></p><p> <strong>branch: master</strong></p><p>YourGithubName对应你的GitHub账户</p><p>注意注意注意！这里的所有冒号后面必须要跟一个空格！这里的所有冒号后面必须要跟一个空格！这里的所有冒号后面必须要跟一个空格！重要的事情说三遍！！！</p><p>接下来安装<strong><em>deploy-git</em></strong>，只有这样才能用命令将文章部署到GitHub上：</p><p><strong>npm install hexo-deployer-git —save</strong></p><p>然后进行以下的命令操作：</p><p><strong>hexo clean</strong></p><p><strong>hexo generate</strong></p><p><strong>hexo deploy</strong></p><ul><li><strong>hexo clean</strong>：清除之前生成的东西，在日后新部署文章的时候可以使用，现在加不加没什么区别</li><li><strong>hexo generate</strong>：生成静态文章，缩写“hexo g”</li><li><strong>hexo deploy</strong>：部署文章，缩写“hexo d”</li></ul><p>在浏览器地址栏中输入<a href="https://yourname.github.io就可以看到你的博客网站了！！">https://yourname.github.io就可以看到你的博客网站了！！</a></p><p>开心~~~</p><p>到这里为止，可以说空间的搭建已经完成了，可是有一个问题，那就是太丑辣！！！</p><p>下面跟我一起去修改一下主题吧~</p><h2 id="三、换主题！"><a href="#三、换主题！" class="headerlink" title="三、换主题！"></a>三、换主题！</h2><p>我换的是matery主题，链接奉上~</p><p><a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></p><p>点开链接，打开readme.md文件。</p><p>点击CN中文说明</p><p>跟着作者的步骤一步步走就ok辣</p><p>值得一提的是，有一部分（个性化）作者没有讲明白</p><p>在csdn上找了一篇文章，</p><p><a href="https://blog.csdn.net/qq_41376237/article/details/113475727">https://blog.csdn.net/qq_41376237/article/details/113475727</a></p><p>按着这个连接走可以很好的了解每一部分代码各自的功能~</p><p>换主题这方面还是挺繁琐的，但是只要耐心一步步走完，高人领路，一点不难！</p><h2 id="四、发表文章！"><a href="#四、发表文章！" class="headerlink" title="四、发表文章！"></a>四、发表文章！</h2><p>首先，要下载一个编辑md文件的软件，比如typora（我正在用这个写这篇文章）</p><p>正版软件是要收钱的（好像80y）</p><p>至于小道途径也是有的捏，github上一搜一大把，大家八仙过海各显神通吧~</p><p>（富哥当我没说）</p><p>准备工作完毕！现在编辑好想要发表的文章，开始传到自己的网站上！</p><p><strong>将导出的<code>.md</code>文件复制到hexo博客文件下的<code>/source/_posts</code>文件内；</strong></p><p><strong>复制完成后，用编译器打开这个文件，在第一行加上<code>title</code>；</strong></p><p>title格式如下：</p><p>“—-”</p><p>“title：my blog”</p><p>“—-”</p><p>上文中的引号不用输入。</p><p>命名结束完成后，在/source/_posts文件内鼠标右键点击空白处，选择Git Bash Here：</p><p>输入 hexo g (完整命令为hexo generate)，用于生成静态文件；<br>然后输入 hexo s(完整命令为hexo server)，用于启动服务器，主要用来本地预览；完成后 打开浏览器输入 <a href="http://localhost:4000，会发现多了你刚写的那篇博客">http://localhost:4000，会发现多了你刚写的那篇博客</a>;<br>最后输入hexo d(hexo deploy)，用于将本地文件发布到github等git仓库上；</p><p>最后，文章发布成功！！！</p><p>这样就可以搭建好自己的blog空间啦~</p><p>你学废了吗？</p><p>下注文中一些文字出处，再次对原作者表示感谢！</p><p><a href="https://blog.csdn.net/weixin_45663697/article/details/109008471">https://blog.csdn.net/weixin_45663697/article/details/109008471</a></p><p><a href="https://blog.csdn.net/qq_41376237/article/details/113475727">https://blog.csdn.net/qq_41376237/article/details/113475727</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzA3NDk4NzA0MQ==&amp;mid=2650486705&amp;idx=1&amp;sn=a7e5d66faf53b223e90fd091cc42b5c0&amp;chksm=8778f4ffb00f7de9f02f84d74393cb81544037ec9af469fa77be2211a4ca4fc5f29b77bbaab2&amp;mpshare=1&amp;scene=23&amp;srcid=1118oY8SYhnqQImXNlJew7hY&amp;sharer_sharetime=1637318270042&amp;sharer_shareid=f4f1251be68d7d516945f36b7eae3f49#rd">https://mp.weixin.qq.com/s?__biz=MzA3NDk4NzA0MQ==&amp;mid=2650486705&amp;idx=1&amp;sn=a7e5d66faf53b223e90fd091cc42b5c0&amp;chksm=8778f4ffb00f7de9f02f84d74393cb81544037ec9af469fa77be2211a4ca4fc5f29b77bbaab2&amp;mpshare=1&amp;scene=23&amp;srcid=1118oY8SYhnqQImXNlJew7hY&amp;sharer_sharetime=1637318270042&amp;sharer_shareid=f4f1251be68d7d516945f36b7eae3f49#rd</a></p><p>欢迎大家对giggle的空间提出宝贵意见！</p><p>如果你也有了自己的blog空间，可以联系giggle互相建个友情链接哟~</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
